// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: configuration.proto

package types;

public final class Configuration {
  private Configuration() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ClusterConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:types.ClusterConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The set of nodes that serve client requests, as they are known to clients.
     * </pre>
     *
     * <code>repeated .types.NodeConfig nodes = 1;</code>
     */
    java.util.List<types.Configuration.NodeConfig> 
        getNodesList();
    /**
     * <pre>
     * The set of nodes that serve client requests, as they are known to clients.
     * </pre>
     *
     * <code>repeated .types.NodeConfig nodes = 1;</code>
     */
    types.Configuration.NodeConfig getNodes(int index);
    /**
     * <pre>
     * The set of nodes that serve client requests, as they are known to clients.
     * </pre>
     *
     * <code>repeated .types.NodeConfig nodes = 1;</code>
     */
    int getNodesCount();
    /**
     * <pre>
     * The set of nodes that serve client requests, as they are known to clients.
     * </pre>
     *
     * <code>repeated .types.NodeConfig nodes = 1;</code>
     */
    java.util.List<? extends types.Configuration.NodeConfigOrBuilder> 
        getNodesOrBuilderList();
    /**
     * <pre>
     * The set of nodes that serve client requests, as they are known to clients.
     * </pre>
     *
     * <code>repeated .types.NodeConfig nodes = 1;</code>
     */
    types.Configuration.NodeConfigOrBuilder getNodesOrBuilder(
        int index);

    /**
     * <pre>
     * The set of database administrators.
     * </pre>
     *
     * <code>repeated .types.Admin admins = 2;</code>
     */
    java.util.List<types.Configuration.Admin> 
        getAdminsList();
    /**
     * <pre>
     * The set of database administrators.
     * </pre>
     *
     * <code>repeated .types.Admin admins = 2;</code>
     */
    types.Configuration.Admin getAdmins(int index);
    /**
     * <pre>
     * The set of database administrators.
     * </pre>
     *
     * <code>repeated .types.Admin admins = 2;</code>
     */
    int getAdminsCount();
    /**
     * <pre>
     * The set of database administrators.
     * </pre>
     *
     * <code>repeated .types.Admin admins = 2;</code>
     */
    java.util.List<? extends types.Configuration.AdminOrBuilder> 
        getAdminsOrBuilderList();
    /**
     * <pre>
     * The set of database administrators.
     * </pre>
     *
     * <code>repeated .types.Admin admins = 2;</code>
     */
    types.Configuration.AdminOrBuilder getAdminsOrBuilder(
        int index);

    /**
     * <pre>
     * The x509 certificates of the root and intermediate certificate authorities that issued all the certificates used
     * for client facing communication, including the client certificates and the server certificates for signing
     * transactions and blocks.
     * </pre>
     *
     * <code>.types.CAConfig cert_auth_config = 3;</code>
     */
    boolean hasCertAuthConfig();
    /**
     * <pre>
     * The x509 certificates of the root and intermediate certificate authorities that issued all the certificates used
     * for client facing communication, including the client certificates and the server certificates for signing
     * transactions and blocks.
     * </pre>
     *
     * <code>.types.CAConfig cert_auth_config = 3;</code>
     */
    types.Configuration.CAConfig getCertAuthConfig();
    /**
     * <pre>
     * The x509 certificates of the root and intermediate certificate authorities that issued all the certificates used
     * for client facing communication, including the client certificates and the server certificates for signing
     * transactions and blocks.
     * </pre>
     *
     * <code>.types.CAConfig cert_auth_config = 3;</code>
     */
    types.Configuration.CAConfigOrBuilder getCertAuthConfigOrBuilder();

    /**
     * <pre>
     * The consensus configuration.
     * </pre>
     *
     * <code>.types.ConsensusConfig consensus_config = 4;</code>
     */
    boolean hasConsensusConfig();
    /**
     * <pre>
     * The consensus configuration.
     * </pre>
     *
     * <code>.types.ConsensusConfig consensus_config = 4;</code>
     */
    types.Configuration.ConsensusConfig getConsensusConfig();
    /**
     * <pre>
     * The consensus configuration.
     * </pre>
     *
     * <code>.types.ConsensusConfig consensus_config = 4;</code>
     */
    types.Configuration.ConsensusConfigOrBuilder getConsensusConfigOrBuilder();
  }
  /**
   * <pre>
   * ClusterConfig holds the shared configuration of a blockchain database cluster.
   * This includes:
   * - a set of nodes that server client requests,
   * - a set of admins,
   * - the certificate authority configuration, including root and intermediate certificates, and
   * - the consensus configuration.
   * This part of the configuration is replicated and is common to all nodes.
   * After the initial bootstrap, this part of the configuration can change only through configuration transactions.
   * </pre>
   *
   * Protobuf type {@code types.ClusterConfig}
   */
  public  static final class ClusterConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:types.ClusterConfig)
      ClusterConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ClusterConfig.newBuilder() to construct.
    private ClusterConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ClusterConfig() {
      nodes_ = java.util.Collections.emptyList();
      admins_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ClusterConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                nodes_ = new java.util.ArrayList<types.Configuration.NodeConfig>();
                mutable_bitField0_ |= 0x00000001;
              }
              nodes_.add(
                  input.readMessage(types.Configuration.NodeConfig.parser(), extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                admins_ = new java.util.ArrayList<types.Configuration.Admin>();
                mutable_bitField0_ |= 0x00000002;
              }
              admins_.add(
                  input.readMessage(types.Configuration.Admin.parser(), extensionRegistry));
              break;
            }
            case 26: {
              types.Configuration.CAConfig.Builder subBuilder = null;
              if (certAuthConfig_ != null) {
                subBuilder = certAuthConfig_.toBuilder();
              }
              certAuthConfig_ = input.readMessage(types.Configuration.CAConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(certAuthConfig_);
                certAuthConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              types.Configuration.ConsensusConfig.Builder subBuilder = null;
              if (consensusConfig_ != null) {
                subBuilder = consensusConfig_.toBuilder();
              }
              consensusConfig_ = input.readMessage(types.Configuration.ConsensusConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(consensusConfig_);
                consensusConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          nodes_ = java.util.Collections.unmodifiableList(nodes_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          admins_ = java.util.Collections.unmodifiableList(admins_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return types.Configuration.internal_static_types_ClusterConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return types.Configuration.internal_static_types_ClusterConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              types.Configuration.ClusterConfig.class, types.Configuration.ClusterConfig.Builder.class);
    }

    private int bitField0_;
    public static final int NODES_FIELD_NUMBER = 1;
    private java.util.List<types.Configuration.NodeConfig> nodes_;
    /**
     * <pre>
     * The set of nodes that serve client requests, as they are known to clients.
     * </pre>
     *
     * <code>repeated .types.NodeConfig nodes = 1;</code>
     */
    public java.util.List<types.Configuration.NodeConfig> getNodesList() {
      return nodes_;
    }
    /**
     * <pre>
     * The set of nodes that serve client requests, as they are known to clients.
     * </pre>
     *
     * <code>repeated .types.NodeConfig nodes = 1;</code>
     */
    public java.util.List<? extends types.Configuration.NodeConfigOrBuilder> 
        getNodesOrBuilderList() {
      return nodes_;
    }
    /**
     * <pre>
     * The set of nodes that serve client requests, as they are known to clients.
     * </pre>
     *
     * <code>repeated .types.NodeConfig nodes = 1;</code>
     */
    public int getNodesCount() {
      return nodes_.size();
    }
    /**
     * <pre>
     * The set of nodes that serve client requests, as they are known to clients.
     * </pre>
     *
     * <code>repeated .types.NodeConfig nodes = 1;</code>
     */
    public types.Configuration.NodeConfig getNodes(int index) {
      return nodes_.get(index);
    }
    /**
     * <pre>
     * The set of nodes that serve client requests, as they are known to clients.
     * </pre>
     *
     * <code>repeated .types.NodeConfig nodes = 1;</code>
     */
    public types.Configuration.NodeConfigOrBuilder getNodesOrBuilder(
        int index) {
      return nodes_.get(index);
    }

    public static final int ADMINS_FIELD_NUMBER = 2;
    private java.util.List<types.Configuration.Admin> admins_;
    /**
     * <pre>
     * The set of database administrators.
     * </pre>
     *
     * <code>repeated .types.Admin admins = 2;</code>
     */
    public java.util.List<types.Configuration.Admin> getAdminsList() {
      return admins_;
    }
    /**
     * <pre>
     * The set of database administrators.
     * </pre>
     *
     * <code>repeated .types.Admin admins = 2;</code>
     */
    public java.util.List<? extends types.Configuration.AdminOrBuilder> 
        getAdminsOrBuilderList() {
      return admins_;
    }
    /**
     * <pre>
     * The set of database administrators.
     * </pre>
     *
     * <code>repeated .types.Admin admins = 2;</code>
     */
    public int getAdminsCount() {
      return admins_.size();
    }
    /**
     * <pre>
     * The set of database administrators.
     * </pre>
     *
     * <code>repeated .types.Admin admins = 2;</code>
     */
    public types.Configuration.Admin getAdmins(int index) {
      return admins_.get(index);
    }
    /**
     * <pre>
     * The set of database administrators.
     * </pre>
     *
     * <code>repeated .types.Admin admins = 2;</code>
     */
    public types.Configuration.AdminOrBuilder getAdminsOrBuilder(
        int index) {
      return admins_.get(index);
    }

    public static final int CERT_AUTH_CONFIG_FIELD_NUMBER = 3;
    private types.Configuration.CAConfig certAuthConfig_;
    /**
     * <pre>
     * The x509 certificates of the root and intermediate certificate authorities that issued all the certificates used
     * for client facing communication, including the client certificates and the server certificates for signing
     * transactions and blocks.
     * </pre>
     *
     * <code>.types.CAConfig cert_auth_config = 3;</code>
     */
    public boolean hasCertAuthConfig() {
      return certAuthConfig_ != null;
    }
    /**
     * <pre>
     * The x509 certificates of the root and intermediate certificate authorities that issued all the certificates used
     * for client facing communication, including the client certificates and the server certificates for signing
     * transactions and blocks.
     * </pre>
     *
     * <code>.types.CAConfig cert_auth_config = 3;</code>
     */
    public types.Configuration.CAConfig getCertAuthConfig() {
      return certAuthConfig_ == null ? types.Configuration.CAConfig.getDefaultInstance() : certAuthConfig_;
    }
    /**
     * <pre>
     * The x509 certificates of the root and intermediate certificate authorities that issued all the certificates used
     * for client facing communication, including the client certificates and the server certificates for signing
     * transactions and blocks.
     * </pre>
     *
     * <code>.types.CAConfig cert_auth_config = 3;</code>
     */
    public types.Configuration.CAConfigOrBuilder getCertAuthConfigOrBuilder() {
      return getCertAuthConfig();
    }

    public static final int CONSENSUS_CONFIG_FIELD_NUMBER = 4;
    private types.Configuration.ConsensusConfig consensusConfig_;
    /**
     * <pre>
     * The consensus configuration.
     * </pre>
     *
     * <code>.types.ConsensusConfig consensus_config = 4;</code>
     */
    public boolean hasConsensusConfig() {
      return consensusConfig_ != null;
    }
    /**
     * <pre>
     * The consensus configuration.
     * </pre>
     *
     * <code>.types.ConsensusConfig consensus_config = 4;</code>
     */
    public types.Configuration.ConsensusConfig getConsensusConfig() {
      return consensusConfig_ == null ? types.Configuration.ConsensusConfig.getDefaultInstance() : consensusConfig_;
    }
    /**
     * <pre>
     * The consensus configuration.
     * </pre>
     *
     * <code>.types.ConsensusConfig consensus_config = 4;</code>
     */
    public types.Configuration.ConsensusConfigOrBuilder getConsensusConfigOrBuilder() {
      return getConsensusConfig();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < nodes_.size(); i++) {
        output.writeMessage(1, nodes_.get(i));
      }
      for (int i = 0; i < admins_.size(); i++) {
        output.writeMessage(2, admins_.get(i));
      }
      if (certAuthConfig_ != null) {
        output.writeMessage(3, getCertAuthConfig());
      }
      if (consensusConfig_ != null) {
        output.writeMessage(4, getConsensusConfig());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < nodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, nodes_.get(i));
      }
      for (int i = 0; i < admins_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, admins_.get(i));
      }
      if (certAuthConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getCertAuthConfig());
      }
      if (consensusConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getConsensusConfig());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof types.Configuration.ClusterConfig)) {
        return super.equals(obj);
      }
      types.Configuration.ClusterConfig other = (types.Configuration.ClusterConfig) obj;

      boolean result = true;
      result = result && getNodesList()
          .equals(other.getNodesList());
      result = result && getAdminsList()
          .equals(other.getAdminsList());
      result = result && (hasCertAuthConfig() == other.hasCertAuthConfig());
      if (hasCertAuthConfig()) {
        result = result && getCertAuthConfig()
            .equals(other.getCertAuthConfig());
      }
      result = result && (hasConsensusConfig() == other.hasConsensusConfig());
      if (hasConsensusConfig()) {
        result = result && getConsensusConfig()
            .equals(other.getConsensusConfig());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getNodesCount() > 0) {
        hash = (37 * hash) + NODES_FIELD_NUMBER;
        hash = (53 * hash) + getNodesList().hashCode();
      }
      if (getAdminsCount() > 0) {
        hash = (37 * hash) + ADMINS_FIELD_NUMBER;
        hash = (53 * hash) + getAdminsList().hashCode();
      }
      if (hasCertAuthConfig()) {
        hash = (37 * hash) + CERT_AUTH_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getCertAuthConfig().hashCode();
      }
      if (hasConsensusConfig()) {
        hash = (37 * hash) + CONSENSUS_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getConsensusConfig().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static types.Configuration.ClusterConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.ClusterConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.ClusterConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.ClusterConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.ClusterConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.ClusterConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.ClusterConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Configuration.ClusterConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Configuration.ClusterConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static types.Configuration.ClusterConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Configuration.ClusterConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Configuration.ClusterConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(types.Configuration.ClusterConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ClusterConfig holds the shared configuration of a blockchain database cluster.
     * This includes:
     * - a set of nodes that server client requests,
     * - a set of admins,
     * - the certificate authority configuration, including root and intermediate certificates, and
     * - the consensus configuration.
     * This part of the configuration is replicated and is common to all nodes.
     * After the initial bootstrap, this part of the configuration can change only through configuration transactions.
     * </pre>
     *
     * Protobuf type {@code types.ClusterConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:types.ClusterConfig)
        types.Configuration.ClusterConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return types.Configuration.internal_static_types_ClusterConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return types.Configuration.internal_static_types_ClusterConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                types.Configuration.ClusterConfig.class, types.Configuration.ClusterConfig.Builder.class);
      }

      // Construct using types.Configuration.ClusterConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNodesFieldBuilder();
          getAdminsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          nodesBuilder_.clear();
        }
        if (adminsBuilder_ == null) {
          admins_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          adminsBuilder_.clear();
        }
        if (certAuthConfigBuilder_ == null) {
          certAuthConfig_ = null;
        } else {
          certAuthConfig_ = null;
          certAuthConfigBuilder_ = null;
        }
        if (consensusConfigBuilder_ == null) {
          consensusConfig_ = null;
        } else {
          consensusConfig_ = null;
          consensusConfigBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return types.Configuration.internal_static_types_ClusterConfig_descriptor;
      }

      @java.lang.Override
      public types.Configuration.ClusterConfig getDefaultInstanceForType() {
        return types.Configuration.ClusterConfig.getDefaultInstance();
      }

      @java.lang.Override
      public types.Configuration.ClusterConfig build() {
        types.Configuration.ClusterConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public types.Configuration.ClusterConfig buildPartial() {
        types.Configuration.ClusterConfig result = new types.Configuration.ClusterConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (nodesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            nodes_ = java.util.Collections.unmodifiableList(nodes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.nodes_ = nodes_;
        } else {
          result.nodes_ = nodesBuilder_.build();
        }
        if (adminsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            admins_ = java.util.Collections.unmodifiableList(admins_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.admins_ = admins_;
        } else {
          result.admins_ = adminsBuilder_.build();
        }
        if (certAuthConfigBuilder_ == null) {
          result.certAuthConfig_ = certAuthConfig_;
        } else {
          result.certAuthConfig_ = certAuthConfigBuilder_.build();
        }
        if (consensusConfigBuilder_ == null) {
          result.consensusConfig_ = consensusConfig_;
        } else {
          result.consensusConfig_ = consensusConfigBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof types.Configuration.ClusterConfig) {
          return mergeFrom((types.Configuration.ClusterConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(types.Configuration.ClusterConfig other) {
        if (other == types.Configuration.ClusterConfig.getDefaultInstance()) return this;
        if (nodesBuilder_ == null) {
          if (!other.nodes_.isEmpty()) {
            if (nodes_.isEmpty()) {
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNodesIsMutable();
              nodes_.addAll(other.nodes_);
            }
            onChanged();
          }
        } else {
          if (!other.nodes_.isEmpty()) {
            if (nodesBuilder_.isEmpty()) {
              nodesBuilder_.dispose();
              nodesBuilder_ = null;
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              nodesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNodesFieldBuilder() : null;
            } else {
              nodesBuilder_.addAllMessages(other.nodes_);
            }
          }
        }
        if (adminsBuilder_ == null) {
          if (!other.admins_.isEmpty()) {
            if (admins_.isEmpty()) {
              admins_ = other.admins_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureAdminsIsMutable();
              admins_.addAll(other.admins_);
            }
            onChanged();
          }
        } else {
          if (!other.admins_.isEmpty()) {
            if (adminsBuilder_.isEmpty()) {
              adminsBuilder_.dispose();
              adminsBuilder_ = null;
              admins_ = other.admins_;
              bitField0_ = (bitField0_ & ~0x00000002);
              adminsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAdminsFieldBuilder() : null;
            } else {
              adminsBuilder_.addAllMessages(other.admins_);
            }
          }
        }
        if (other.hasCertAuthConfig()) {
          mergeCertAuthConfig(other.getCertAuthConfig());
        }
        if (other.hasConsensusConfig()) {
          mergeConsensusConfig(other.getConsensusConfig());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        types.Configuration.ClusterConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (types.Configuration.ClusterConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<types.Configuration.NodeConfig> nodes_ =
        java.util.Collections.emptyList();
      private void ensureNodesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          nodes_ = new java.util.ArrayList<types.Configuration.NodeConfig>(nodes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          types.Configuration.NodeConfig, types.Configuration.NodeConfig.Builder, types.Configuration.NodeConfigOrBuilder> nodesBuilder_;

      /**
       * <pre>
       * The set of nodes that serve client requests, as they are known to clients.
       * </pre>
       *
       * <code>repeated .types.NodeConfig nodes = 1;</code>
       */
      public java.util.List<types.Configuration.NodeConfig> getNodesList() {
        if (nodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nodes_);
        } else {
          return nodesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The set of nodes that serve client requests, as they are known to clients.
       * </pre>
       *
       * <code>repeated .types.NodeConfig nodes = 1;</code>
       */
      public int getNodesCount() {
        if (nodesBuilder_ == null) {
          return nodes_.size();
        } else {
          return nodesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The set of nodes that serve client requests, as they are known to clients.
       * </pre>
       *
       * <code>repeated .types.NodeConfig nodes = 1;</code>
       */
      public types.Configuration.NodeConfig getNodes(int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);
        } else {
          return nodesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The set of nodes that serve client requests, as they are known to clients.
       * </pre>
       *
       * <code>repeated .types.NodeConfig nodes = 1;</code>
       */
      public Builder setNodes(
          int index, types.Configuration.NodeConfig value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.set(index, value);
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The set of nodes that serve client requests, as they are known to clients.
       * </pre>
       *
       * <code>repeated .types.NodeConfig nodes = 1;</code>
       */
      public Builder setNodes(
          int index, types.Configuration.NodeConfig.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The set of nodes that serve client requests, as they are known to clients.
       * </pre>
       *
       * <code>repeated .types.NodeConfig nodes = 1;</code>
       */
      public Builder addNodes(types.Configuration.NodeConfig value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The set of nodes that serve client requests, as they are known to clients.
       * </pre>
       *
       * <code>repeated .types.NodeConfig nodes = 1;</code>
       */
      public Builder addNodes(
          int index, types.Configuration.NodeConfig value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(index, value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The set of nodes that serve client requests, as they are known to clients.
       * </pre>
       *
       * <code>repeated .types.NodeConfig nodes = 1;</code>
       */
      public Builder addNodes(
          types.Configuration.NodeConfig.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The set of nodes that serve client requests, as they are known to clients.
       * </pre>
       *
       * <code>repeated .types.NodeConfig nodes = 1;</code>
       */
      public Builder addNodes(
          int index, types.Configuration.NodeConfig.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The set of nodes that serve client requests, as they are known to clients.
       * </pre>
       *
       * <code>repeated .types.NodeConfig nodes = 1;</code>
       */
      public Builder addAllNodes(
          java.lang.Iterable<? extends types.Configuration.NodeConfig> values) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nodes_);
          onChanged();
        } else {
          nodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The set of nodes that serve client requests, as they are known to clients.
       * </pre>
       *
       * <code>repeated .types.NodeConfig nodes = 1;</code>
       */
      public Builder clearNodes() {
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          nodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The set of nodes that serve client requests, as they are known to clients.
       * </pre>
       *
       * <code>repeated .types.NodeConfig nodes = 1;</code>
       */
      public Builder removeNodes(int index) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.remove(index);
          onChanged();
        } else {
          nodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The set of nodes that serve client requests, as they are known to clients.
       * </pre>
       *
       * <code>repeated .types.NodeConfig nodes = 1;</code>
       */
      public types.Configuration.NodeConfig.Builder getNodesBuilder(
          int index) {
        return getNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The set of nodes that serve client requests, as they are known to clients.
       * </pre>
       *
       * <code>repeated .types.NodeConfig nodes = 1;</code>
       */
      public types.Configuration.NodeConfigOrBuilder getNodesOrBuilder(
          int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);  } else {
          return nodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The set of nodes that serve client requests, as they are known to clients.
       * </pre>
       *
       * <code>repeated .types.NodeConfig nodes = 1;</code>
       */
      public java.util.List<? extends types.Configuration.NodeConfigOrBuilder> 
           getNodesOrBuilderList() {
        if (nodesBuilder_ != null) {
          return nodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nodes_);
        }
      }
      /**
       * <pre>
       * The set of nodes that serve client requests, as they are known to clients.
       * </pre>
       *
       * <code>repeated .types.NodeConfig nodes = 1;</code>
       */
      public types.Configuration.NodeConfig.Builder addNodesBuilder() {
        return getNodesFieldBuilder().addBuilder(
            types.Configuration.NodeConfig.getDefaultInstance());
      }
      /**
       * <pre>
       * The set of nodes that serve client requests, as they are known to clients.
       * </pre>
       *
       * <code>repeated .types.NodeConfig nodes = 1;</code>
       */
      public types.Configuration.NodeConfig.Builder addNodesBuilder(
          int index) {
        return getNodesFieldBuilder().addBuilder(
            index, types.Configuration.NodeConfig.getDefaultInstance());
      }
      /**
       * <pre>
       * The set of nodes that serve client requests, as they are known to clients.
       * </pre>
       *
       * <code>repeated .types.NodeConfig nodes = 1;</code>
       */
      public java.util.List<types.Configuration.NodeConfig.Builder> 
           getNodesBuilderList() {
        return getNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          types.Configuration.NodeConfig, types.Configuration.NodeConfig.Builder, types.Configuration.NodeConfigOrBuilder> 
          getNodesFieldBuilder() {
        if (nodesBuilder_ == null) {
          nodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              types.Configuration.NodeConfig, types.Configuration.NodeConfig.Builder, types.Configuration.NodeConfigOrBuilder>(
                  nodes_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          nodes_ = null;
        }
        return nodesBuilder_;
      }

      private java.util.List<types.Configuration.Admin> admins_ =
        java.util.Collections.emptyList();
      private void ensureAdminsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          admins_ = new java.util.ArrayList<types.Configuration.Admin>(admins_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          types.Configuration.Admin, types.Configuration.Admin.Builder, types.Configuration.AdminOrBuilder> adminsBuilder_;

      /**
       * <pre>
       * The set of database administrators.
       * </pre>
       *
       * <code>repeated .types.Admin admins = 2;</code>
       */
      public java.util.List<types.Configuration.Admin> getAdminsList() {
        if (adminsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(admins_);
        } else {
          return adminsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The set of database administrators.
       * </pre>
       *
       * <code>repeated .types.Admin admins = 2;</code>
       */
      public int getAdminsCount() {
        if (adminsBuilder_ == null) {
          return admins_.size();
        } else {
          return adminsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The set of database administrators.
       * </pre>
       *
       * <code>repeated .types.Admin admins = 2;</code>
       */
      public types.Configuration.Admin getAdmins(int index) {
        if (adminsBuilder_ == null) {
          return admins_.get(index);
        } else {
          return adminsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The set of database administrators.
       * </pre>
       *
       * <code>repeated .types.Admin admins = 2;</code>
       */
      public Builder setAdmins(
          int index, types.Configuration.Admin value) {
        if (adminsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAdminsIsMutable();
          admins_.set(index, value);
          onChanged();
        } else {
          adminsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The set of database administrators.
       * </pre>
       *
       * <code>repeated .types.Admin admins = 2;</code>
       */
      public Builder setAdmins(
          int index, types.Configuration.Admin.Builder builderForValue) {
        if (adminsBuilder_ == null) {
          ensureAdminsIsMutable();
          admins_.set(index, builderForValue.build());
          onChanged();
        } else {
          adminsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The set of database administrators.
       * </pre>
       *
       * <code>repeated .types.Admin admins = 2;</code>
       */
      public Builder addAdmins(types.Configuration.Admin value) {
        if (adminsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAdminsIsMutable();
          admins_.add(value);
          onChanged();
        } else {
          adminsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The set of database administrators.
       * </pre>
       *
       * <code>repeated .types.Admin admins = 2;</code>
       */
      public Builder addAdmins(
          int index, types.Configuration.Admin value) {
        if (adminsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAdminsIsMutable();
          admins_.add(index, value);
          onChanged();
        } else {
          adminsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The set of database administrators.
       * </pre>
       *
       * <code>repeated .types.Admin admins = 2;</code>
       */
      public Builder addAdmins(
          types.Configuration.Admin.Builder builderForValue) {
        if (adminsBuilder_ == null) {
          ensureAdminsIsMutable();
          admins_.add(builderForValue.build());
          onChanged();
        } else {
          adminsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The set of database administrators.
       * </pre>
       *
       * <code>repeated .types.Admin admins = 2;</code>
       */
      public Builder addAdmins(
          int index, types.Configuration.Admin.Builder builderForValue) {
        if (adminsBuilder_ == null) {
          ensureAdminsIsMutable();
          admins_.add(index, builderForValue.build());
          onChanged();
        } else {
          adminsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The set of database administrators.
       * </pre>
       *
       * <code>repeated .types.Admin admins = 2;</code>
       */
      public Builder addAllAdmins(
          java.lang.Iterable<? extends types.Configuration.Admin> values) {
        if (adminsBuilder_ == null) {
          ensureAdminsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, admins_);
          onChanged();
        } else {
          adminsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The set of database administrators.
       * </pre>
       *
       * <code>repeated .types.Admin admins = 2;</code>
       */
      public Builder clearAdmins() {
        if (adminsBuilder_ == null) {
          admins_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          adminsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The set of database administrators.
       * </pre>
       *
       * <code>repeated .types.Admin admins = 2;</code>
       */
      public Builder removeAdmins(int index) {
        if (adminsBuilder_ == null) {
          ensureAdminsIsMutable();
          admins_.remove(index);
          onChanged();
        } else {
          adminsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The set of database administrators.
       * </pre>
       *
       * <code>repeated .types.Admin admins = 2;</code>
       */
      public types.Configuration.Admin.Builder getAdminsBuilder(
          int index) {
        return getAdminsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The set of database administrators.
       * </pre>
       *
       * <code>repeated .types.Admin admins = 2;</code>
       */
      public types.Configuration.AdminOrBuilder getAdminsOrBuilder(
          int index) {
        if (adminsBuilder_ == null) {
          return admins_.get(index);  } else {
          return adminsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The set of database administrators.
       * </pre>
       *
       * <code>repeated .types.Admin admins = 2;</code>
       */
      public java.util.List<? extends types.Configuration.AdminOrBuilder> 
           getAdminsOrBuilderList() {
        if (adminsBuilder_ != null) {
          return adminsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(admins_);
        }
      }
      /**
       * <pre>
       * The set of database administrators.
       * </pre>
       *
       * <code>repeated .types.Admin admins = 2;</code>
       */
      public types.Configuration.Admin.Builder addAdminsBuilder() {
        return getAdminsFieldBuilder().addBuilder(
            types.Configuration.Admin.getDefaultInstance());
      }
      /**
       * <pre>
       * The set of database administrators.
       * </pre>
       *
       * <code>repeated .types.Admin admins = 2;</code>
       */
      public types.Configuration.Admin.Builder addAdminsBuilder(
          int index) {
        return getAdminsFieldBuilder().addBuilder(
            index, types.Configuration.Admin.getDefaultInstance());
      }
      /**
       * <pre>
       * The set of database administrators.
       * </pre>
       *
       * <code>repeated .types.Admin admins = 2;</code>
       */
      public java.util.List<types.Configuration.Admin.Builder> 
           getAdminsBuilderList() {
        return getAdminsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          types.Configuration.Admin, types.Configuration.Admin.Builder, types.Configuration.AdminOrBuilder> 
          getAdminsFieldBuilder() {
        if (adminsBuilder_ == null) {
          adminsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              types.Configuration.Admin, types.Configuration.Admin.Builder, types.Configuration.AdminOrBuilder>(
                  admins_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          admins_ = null;
        }
        return adminsBuilder_;
      }

      private types.Configuration.CAConfig certAuthConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          types.Configuration.CAConfig, types.Configuration.CAConfig.Builder, types.Configuration.CAConfigOrBuilder> certAuthConfigBuilder_;
      /**
       * <pre>
       * The x509 certificates of the root and intermediate certificate authorities that issued all the certificates used
       * for client facing communication, including the client certificates and the server certificates for signing
       * transactions and blocks.
       * </pre>
       *
       * <code>.types.CAConfig cert_auth_config = 3;</code>
       */
      public boolean hasCertAuthConfig() {
        return certAuthConfigBuilder_ != null || certAuthConfig_ != null;
      }
      /**
       * <pre>
       * The x509 certificates of the root and intermediate certificate authorities that issued all the certificates used
       * for client facing communication, including the client certificates and the server certificates for signing
       * transactions and blocks.
       * </pre>
       *
       * <code>.types.CAConfig cert_auth_config = 3;</code>
       */
      public types.Configuration.CAConfig getCertAuthConfig() {
        if (certAuthConfigBuilder_ == null) {
          return certAuthConfig_ == null ? types.Configuration.CAConfig.getDefaultInstance() : certAuthConfig_;
        } else {
          return certAuthConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The x509 certificates of the root and intermediate certificate authorities that issued all the certificates used
       * for client facing communication, including the client certificates and the server certificates for signing
       * transactions and blocks.
       * </pre>
       *
       * <code>.types.CAConfig cert_auth_config = 3;</code>
       */
      public Builder setCertAuthConfig(types.Configuration.CAConfig value) {
        if (certAuthConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          certAuthConfig_ = value;
          onChanged();
        } else {
          certAuthConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The x509 certificates of the root and intermediate certificate authorities that issued all the certificates used
       * for client facing communication, including the client certificates and the server certificates for signing
       * transactions and blocks.
       * </pre>
       *
       * <code>.types.CAConfig cert_auth_config = 3;</code>
       */
      public Builder setCertAuthConfig(
          types.Configuration.CAConfig.Builder builderForValue) {
        if (certAuthConfigBuilder_ == null) {
          certAuthConfig_ = builderForValue.build();
          onChanged();
        } else {
          certAuthConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The x509 certificates of the root and intermediate certificate authorities that issued all the certificates used
       * for client facing communication, including the client certificates and the server certificates for signing
       * transactions and blocks.
       * </pre>
       *
       * <code>.types.CAConfig cert_auth_config = 3;</code>
       */
      public Builder mergeCertAuthConfig(types.Configuration.CAConfig value) {
        if (certAuthConfigBuilder_ == null) {
          if (certAuthConfig_ != null) {
            certAuthConfig_ =
              types.Configuration.CAConfig.newBuilder(certAuthConfig_).mergeFrom(value).buildPartial();
          } else {
            certAuthConfig_ = value;
          }
          onChanged();
        } else {
          certAuthConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The x509 certificates of the root and intermediate certificate authorities that issued all the certificates used
       * for client facing communication, including the client certificates and the server certificates for signing
       * transactions and blocks.
       * </pre>
       *
       * <code>.types.CAConfig cert_auth_config = 3;</code>
       */
      public Builder clearCertAuthConfig() {
        if (certAuthConfigBuilder_ == null) {
          certAuthConfig_ = null;
          onChanged();
        } else {
          certAuthConfig_ = null;
          certAuthConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The x509 certificates of the root and intermediate certificate authorities that issued all the certificates used
       * for client facing communication, including the client certificates and the server certificates for signing
       * transactions and blocks.
       * </pre>
       *
       * <code>.types.CAConfig cert_auth_config = 3;</code>
       */
      public types.Configuration.CAConfig.Builder getCertAuthConfigBuilder() {
        
        onChanged();
        return getCertAuthConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The x509 certificates of the root and intermediate certificate authorities that issued all the certificates used
       * for client facing communication, including the client certificates and the server certificates for signing
       * transactions and blocks.
       * </pre>
       *
       * <code>.types.CAConfig cert_auth_config = 3;</code>
       */
      public types.Configuration.CAConfigOrBuilder getCertAuthConfigOrBuilder() {
        if (certAuthConfigBuilder_ != null) {
          return certAuthConfigBuilder_.getMessageOrBuilder();
        } else {
          return certAuthConfig_ == null ?
              types.Configuration.CAConfig.getDefaultInstance() : certAuthConfig_;
        }
      }
      /**
       * <pre>
       * The x509 certificates of the root and intermediate certificate authorities that issued all the certificates used
       * for client facing communication, including the client certificates and the server certificates for signing
       * transactions and blocks.
       * </pre>
       *
       * <code>.types.CAConfig cert_auth_config = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          types.Configuration.CAConfig, types.Configuration.CAConfig.Builder, types.Configuration.CAConfigOrBuilder> 
          getCertAuthConfigFieldBuilder() {
        if (certAuthConfigBuilder_ == null) {
          certAuthConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              types.Configuration.CAConfig, types.Configuration.CAConfig.Builder, types.Configuration.CAConfigOrBuilder>(
                  getCertAuthConfig(),
                  getParentForChildren(),
                  isClean());
          certAuthConfig_ = null;
        }
        return certAuthConfigBuilder_;
      }

      private types.Configuration.ConsensusConfig consensusConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          types.Configuration.ConsensusConfig, types.Configuration.ConsensusConfig.Builder, types.Configuration.ConsensusConfigOrBuilder> consensusConfigBuilder_;
      /**
       * <pre>
       * The consensus configuration.
       * </pre>
       *
       * <code>.types.ConsensusConfig consensus_config = 4;</code>
       */
      public boolean hasConsensusConfig() {
        return consensusConfigBuilder_ != null || consensusConfig_ != null;
      }
      /**
       * <pre>
       * The consensus configuration.
       * </pre>
       *
       * <code>.types.ConsensusConfig consensus_config = 4;</code>
       */
      public types.Configuration.ConsensusConfig getConsensusConfig() {
        if (consensusConfigBuilder_ == null) {
          return consensusConfig_ == null ? types.Configuration.ConsensusConfig.getDefaultInstance() : consensusConfig_;
        } else {
          return consensusConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The consensus configuration.
       * </pre>
       *
       * <code>.types.ConsensusConfig consensus_config = 4;</code>
       */
      public Builder setConsensusConfig(types.Configuration.ConsensusConfig value) {
        if (consensusConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          consensusConfig_ = value;
          onChanged();
        } else {
          consensusConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The consensus configuration.
       * </pre>
       *
       * <code>.types.ConsensusConfig consensus_config = 4;</code>
       */
      public Builder setConsensusConfig(
          types.Configuration.ConsensusConfig.Builder builderForValue) {
        if (consensusConfigBuilder_ == null) {
          consensusConfig_ = builderForValue.build();
          onChanged();
        } else {
          consensusConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The consensus configuration.
       * </pre>
       *
       * <code>.types.ConsensusConfig consensus_config = 4;</code>
       */
      public Builder mergeConsensusConfig(types.Configuration.ConsensusConfig value) {
        if (consensusConfigBuilder_ == null) {
          if (consensusConfig_ != null) {
            consensusConfig_ =
              types.Configuration.ConsensusConfig.newBuilder(consensusConfig_).mergeFrom(value).buildPartial();
          } else {
            consensusConfig_ = value;
          }
          onChanged();
        } else {
          consensusConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The consensus configuration.
       * </pre>
       *
       * <code>.types.ConsensusConfig consensus_config = 4;</code>
       */
      public Builder clearConsensusConfig() {
        if (consensusConfigBuilder_ == null) {
          consensusConfig_ = null;
          onChanged();
        } else {
          consensusConfig_ = null;
          consensusConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The consensus configuration.
       * </pre>
       *
       * <code>.types.ConsensusConfig consensus_config = 4;</code>
       */
      public types.Configuration.ConsensusConfig.Builder getConsensusConfigBuilder() {
        
        onChanged();
        return getConsensusConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The consensus configuration.
       * </pre>
       *
       * <code>.types.ConsensusConfig consensus_config = 4;</code>
       */
      public types.Configuration.ConsensusConfigOrBuilder getConsensusConfigOrBuilder() {
        if (consensusConfigBuilder_ != null) {
          return consensusConfigBuilder_.getMessageOrBuilder();
        } else {
          return consensusConfig_ == null ?
              types.Configuration.ConsensusConfig.getDefaultInstance() : consensusConfig_;
        }
      }
      /**
       * <pre>
       * The consensus configuration.
       * </pre>
       *
       * <code>.types.ConsensusConfig consensus_config = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          types.Configuration.ConsensusConfig, types.Configuration.ConsensusConfig.Builder, types.Configuration.ConsensusConfigOrBuilder> 
          getConsensusConfigFieldBuilder() {
        if (consensusConfigBuilder_ == null) {
          consensusConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              types.Configuration.ConsensusConfig, types.Configuration.ConsensusConfig.Builder, types.Configuration.ConsensusConfigOrBuilder>(
                  getConsensusConfig(),
                  getParentForChildren(),
                  isClean());
          consensusConfig_ = null;
        }
        return consensusConfigBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:types.ClusterConfig)
    }

    // @@protoc_insertion_point(class_scope:types.ClusterConfig)
    private static final types.Configuration.ClusterConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new types.Configuration.ClusterConfig();
    }

    public static types.Configuration.ClusterConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ClusterConfig>
        PARSER = new com.google.protobuf.AbstractParser<ClusterConfig>() {
      @java.lang.Override
      public ClusterConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClusterConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ClusterConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ClusterConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public types.Configuration.ClusterConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NodeConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:types.NodeConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A unique identifier for the node within the cluster.
     * TODO define and enforce the characters that can be used for this field. Should be something that complies with file names.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * A unique identifier for the node within the cluster.
     * TODO define and enforce the characters that can be used for this field. Should be something that complies with file names.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The host name or IP address of the HTTP/REST endpoint served by this node.
     * </pre>
     *
     * <code>string address = 2;</code>
     */
    java.lang.String getAddress();
    /**
     * <pre>
     * The host name or IP address of the HTTP/REST endpoint served by this node.
     * </pre>
     *
     * <code>string address = 2;</code>
     */
    com.google.protobuf.ByteString
        getAddressBytes();

    /**
     * <pre>
     * The port of the HTTP/REST endpoint served by this node.
     * </pre>
     *
     * <code>uint32 port = 3;</code>
     */
    int getPort();

    /**
     * <pre>
     * The x509 certificate used by this node to authenticate its communication with clients.
     * This certificate corresponds to the private key the server uses to sign blocks and transaction responses.
     * </pre>
     *
     * <code>bytes certificate = 4;</code>
     */
    com.google.protobuf.ByteString getCertificate();
  }
  /**
   * <pre>
   * NodeConfig holds the information about a database node in the cluster.
   * This information is exposed to the clients.
   * The address and port (see below) define the HTTP/REST endpoint that clients connect to,
   * and must be reachable by clients that submit requests to the database.
   * TODO: change the name NodeConfig to Node once the existing message Node is renamed to something else.
   * </pre>
   *
   * Protobuf type {@code types.NodeConfig}
   */
  public  static final class NodeConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:types.NodeConfig)
      NodeConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NodeConfig.newBuilder() to construct.
    private NodeConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NodeConfig() {
      id_ = "";
      address_ = "";
      port_ = 0;
      certificate_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NodeConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              address_ = s;
              break;
            }
            case 24: {

              port_ = input.readUInt32();
              break;
            }
            case 34: {

              certificate_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return types.Configuration.internal_static_types_NodeConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return types.Configuration.internal_static_types_NodeConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              types.Configuration.NodeConfig.class, types.Configuration.NodeConfig.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * A unique identifier for the node within the cluster.
     * TODO define and enforce the characters that can be used for this field. Should be something that complies with file names.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A unique identifier for the node within the cluster.
     * TODO define and enforce the characters that can be used for this field. Should be something that complies with file names.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ADDRESS_FIELD_NUMBER = 2;
    private volatile java.lang.Object address_;
    /**
     * <pre>
     * The host name or IP address of the HTTP/REST endpoint served by this node.
     * </pre>
     *
     * <code>string address = 2;</code>
     */
    public java.lang.String getAddress() {
      java.lang.Object ref = address_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        address_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The host name or IP address of the HTTP/REST endpoint served by this node.
     * </pre>
     *
     * <code>string address = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAddressBytes() {
      java.lang.Object ref = address_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        address_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORT_FIELD_NUMBER = 3;
    private int port_;
    /**
     * <pre>
     * The port of the HTTP/REST endpoint served by this node.
     * </pre>
     *
     * <code>uint32 port = 3;</code>
     */
    public int getPort() {
      return port_;
    }

    public static final int CERTIFICATE_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString certificate_;
    /**
     * <pre>
     * The x509 certificate used by this node to authenticate its communication with clients.
     * This certificate corresponds to the private key the server uses to sign blocks and transaction responses.
     * </pre>
     *
     * <code>bytes certificate = 4;</code>
     */
    public com.google.protobuf.ByteString getCertificate() {
      return certificate_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getAddressBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, address_);
      }
      if (port_ != 0) {
        output.writeUInt32(3, port_);
      }
      if (!certificate_.isEmpty()) {
        output.writeBytes(4, certificate_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getAddressBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, address_);
      }
      if (port_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, port_);
      }
      if (!certificate_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, certificate_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof types.Configuration.NodeConfig)) {
        return super.equals(obj);
      }
      types.Configuration.NodeConfig other = (types.Configuration.NodeConfig) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && getAddress()
          .equals(other.getAddress());
      result = result && (getPort()
          == other.getPort());
      result = result && getCertificate()
          .equals(other.getCertificate());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getAddress().hashCode();
      hash = (37 * hash) + PORT_FIELD_NUMBER;
      hash = (53 * hash) + getPort();
      hash = (37 * hash) + CERTIFICATE_FIELD_NUMBER;
      hash = (53 * hash) + getCertificate().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static types.Configuration.NodeConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.NodeConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.NodeConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.NodeConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.NodeConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.NodeConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.NodeConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Configuration.NodeConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Configuration.NodeConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static types.Configuration.NodeConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Configuration.NodeConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Configuration.NodeConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(types.Configuration.NodeConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * NodeConfig holds the information about a database node in the cluster.
     * This information is exposed to the clients.
     * The address and port (see below) define the HTTP/REST endpoint that clients connect to,
     * and must be reachable by clients that submit requests to the database.
     * TODO: change the name NodeConfig to Node once the existing message Node is renamed to something else.
     * </pre>
     *
     * Protobuf type {@code types.NodeConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:types.NodeConfig)
        types.Configuration.NodeConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return types.Configuration.internal_static_types_NodeConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return types.Configuration.internal_static_types_NodeConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                types.Configuration.NodeConfig.class, types.Configuration.NodeConfig.Builder.class);
      }

      // Construct using types.Configuration.NodeConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        address_ = "";

        port_ = 0;

        certificate_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return types.Configuration.internal_static_types_NodeConfig_descriptor;
      }

      @java.lang.Override
      public types.Configuration.NodeConfig getDefaultInstanceForType() {
        return types.Configuration.NodeConfig.getDefaultInstance();
      }

      @java.lang.Override
      public types.Configuration.NodeConfig build() {
        types.Configuration.NodeConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public types.Configuration.NodeConfig buildPartial() {
        types.Configuration.NodeConfig result = new types.Configuration.NodeConfig(this);
        result.id_ = id_;
        result.address_ = address_;
        result.port_ = port_;
        result.certificate_ = certificate_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof types.Configuration.NodeConfig) {
          return mergeFrom((types.Configuration.NodeConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(types.Configuration.NodeConfig other) {
        if (other == types.Configuration.NodeConfig.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getAddress().isEmpty()) {
          address_ = other.address_;
          onChanged();
        }
        if (other.getPort() != 0) {
          setPort(other.getPort());
        }
        if (other.getCertificate() != com.google.protobuf.ByteString.EMPTY) {
          setCertificate(other.getCertificate());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        types.Configuration.NodeConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (types.Configuration.NodeConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * A unique identifier for the node within the cluster.
       * TODO define and enforce the characters that can be used for this field. Should be something that complies with file names.
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A unique identifier for the node within the cluster.
       * TODO define and enforce the characters that can be used for this field. Should be something that complies with file names.
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A unique identifier for the node within the cluster.
       * TODO define and enforce the characters that can be used for this field. Should be something that complies with file names.
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A unique identifier for the node within the cluster.
       * TODO define and enforce the characters that can be used for this field. Should be something that complies with file names.
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A unique identifier for the node within the cluster.
       * TODO define and enforce the characters that can be used for this field. Should be something that complies with file names.
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object address_ = "";
      /**
       * <pre>
       * The host name or IP address of the HTTP/REST endpoint served by this node.
       * </pre>
       *
       * <code>string address = 2;</code>
       */
      public java.lang.String getAddress() {
        java.lang.Object ref = address_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          address_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The host name or IP address of the HTTP/REST endpoint served by this node.
       * </pre>
       *
       * <code>string address = 2;</code>
       */
      public com.google.protobuf.ByteString
          getAddressBytes() {
        java.lang.Object ref = address_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          address_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The host name or IP address of the HTTP/REST endpoint served by this node.
       * </pre>
       *
       * <code>string address = 2;</code>
       */
      public Builder setAddress(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        address_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The host name or IP address of the HTTP/REST endpoint served by this node.
       * </pre>
       *
       * <code>string address = 2;</code>
       */
      public Builder clearAddress() {
        
        address_ = getDefaultInstance().getAddress();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The host name or IP address of the HTTP/REST endpoint served by this node.
       * </pre>
       *
       * <code>string address = 2;</code>
       */
      public Builder setAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        address_ = value;
        onChanged();
        return this;
      }

      private int port_ ;
      /**
       * <pre>
       * The port of the HTTP/REST endpoint served by this node.
       * </pre>
       *
       * <code>uint32 port = 3;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <pre>
       * The port of the HTTP/REST endpoint served by this node.
       * </pre>
       *
       * <code>uint32 port = 3;</code>
       */
      public Builder setPort(int value) {
        
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The port of the HTTP/REST endpoint served by this node.
       * </pre>
       *
       * <code>uint32 port = 3;</code>
       */
      public Builder clearPort() {
        
        port_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString certificate_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The x509 certificate used by this node to authenticate its communication with clients.
       * This certificate corresponds to the private key the server uses to sign blocks and transaction responses.
       * </pre>
       *
       * <code>bytes certificate = 4;</code>
       */
      public com.google.protobuf.ByteString getCertificate() {
        return certificate_;
      }
      /**
       * <pre>
       * The x509 certificate used by this node to authenticate its communication with clients.
       * This certificate corresponds to the private key the server uses to sign blocks and transaction responses.
       * </pre>
       *
       * <code>bytes certificate = 4;</code>
       */
      public Builder setCertificate(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        certificate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The x509 certificate used by this node to authenticate its communication with clients.
       * This certificate corresponds to the private key the server uses to sign blocks and transaction responses.
       * </pre>
       *
       * <code>bytes certificate = 4;</code>
       */
      public Builder clearCertificate() {
        
        certificate_ = getDefaultInstance().getCertificate();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:types.NodeConfig)
    }

    // @@protoc_insertion_point(class_scope:types.NodeConfig)
    private static final types.Configuration.NodeConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new types.Configuration.NodeConfig();
    }

    public static types.Configuration.NodeConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NodeConfig>
        PARSER = new com.google.protobuf.AbstractParser<NodeConfig>() {
      @java.lang.Override
      public NodeConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NodeConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NodeConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NodeConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public types.Configuration.NodeConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AdminOrBuilder extends
      // @@protoc_insertion_point(interface_extends:types.Admin)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>bytes certificate = 2;</code>
     */
    com.google.protobuf.ByteString getCertificate();
  }
  /**
   * <pre>
   * Admin holds the id and certificate of a cluster administrator.
   * </pre>
   *
   * Protobuf type {@code types.Admin}
   */
  public  static final class Admin extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:types.Admin)
      AdminOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Admin.newBuilder() to construct.
    private Admin(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Admin() {
      id_ = "";
      certificate_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Admin(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {

              certificate_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return types.Configuration.internal_static_types_Admin_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return types.Configuration.internal_static_types_Admin_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              types.Configuration.Admin.class, types.Configuration.Admin.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CERTIFICATE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString certificate_;
    /**
     * <code>bytes certificate = 2;</code>
     */
    public com.google.protobuf.ByteString getCertificate() {
      return certificate_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!certificate_.isEmpty()) {
        output.writeBytes(2, certificate_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!certificate_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, certificate_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof types.Configuration.Admin)) {
        return super.equals(obj);
      }
      types.Configuration.Admin other = (types.Configuration.Admin) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && getCertificate()
          .equals(other.getCertificate());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + CERTIFICATE_FIELD_NUMBER;
      hash = (53 * hash) + getCertificate().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static types.Configuration.Admin parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.Admin parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.Admin parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.Admin parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.Admin parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.Admin parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.Admin parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Configuration.Admin parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Configuration.Admin parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static types.Configuration.Admin parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Configuration.Admin parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Configuration.Admin parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(types.Configuration.Admin prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Admin holds the id and certificate of a cluster administrator.
     * </pre>
     *
     * Protobuf type {@code types.Admin}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:types.Admin)
        types.Configuration.AdminOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return types.Configuration.internal_static_types_Admin_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return types.Configuration.internal_static_types_Admin_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                types.Configuration.Admin.class, types.Configuration.Admin.Builder.class);
      }

      // Construct using types.Configuration.Admin.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        certificate_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return types.Configuration.internal_static_types_Admin_descriptor;
      }

      @java.lang.Override
      public types.Configuration.Admin getDefaultInstanceForType() {
        return types.Configuration.Admin.getDefaultInstance();
      }

      @java.lang.Override
      public types.Configuration.Admin build() {
        types.Configuration.Admin result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public types.Configuration.Admin buildPartial() {
        types.Configuration.Admin result = new types.Configuration.Admin(this);
        result.id_ = id_;
        result.certificate_ = certificate_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof types.Configuration.Admin) {
          return mergeFrom((types.Configuration.Admin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(types.Configuration.Admin other) {
        if (other == types.Configuration.Admin.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.getCertificate() != com.google.protobuf.ByteString.EMPTY) {
          setCertificate(other.getCertificate());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        types.Configuration.Admin parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (types.Configuration.Admin) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString certificate_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes certificate = 2;</code>
       */
      public com.google.protobuf.ByteString getCertificate() {
        return certificate_;
      }
      /**
       * <code>bytes certificate = 2;</code>
       */
      public Builder setCertificate(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        certificate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes certificate = 2;</code>
       */
      public Builder clearCertificate() {
        
        certificate_ = getDefaultInstance().getCertificate();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:types.Admin)
    }

    // @@protoc_insertion_point(class_scope:types.Admin)
    private static final types.Configuration.Admin DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new types.Configuration.Admin();
    }

    public static types.Configuration.Admin getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Admin>
        PARSER = new com.google.protobuf.AbstractParser<Admin>() {
      @java.lang.Override
      public Admin parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Admin(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Admin> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Admin> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public types.Configuration.Admin getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CAConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:types.CAConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated bytes roots = 1;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getRootsList();
    /**
     * <code>repeated bytes roots = 1;</code>
     */
    int getRootsCount();
    /**
     * <code>repeated bytes roots = 1;</code>
     */
    com.google.protobuf.ByteString getRoots(int index);

    /**
     * <code>repeated bytes intermediates = 2;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getIntermediatesList();
    /**
     * <code>repeated bytes intermediates = 2;</code>
     */
    int getIntermediatesCount();
    /**
     * <code>repeated bytes intermediates = 2;</code>
     */
    com.google.protobuf.ByteString getIntermediates(int index);
  }
  /**
   * Protobuf type {@code types.CAConfig}
   */
  public  static final class CAConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:types.CAConfig)
      CAConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CAConfig.newBuilder() to construct.
    private CAConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CAConfig() {
      roots_ = java.util.Collections.emptyList();
      intermediates_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CAConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                roots_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000001;
              }
              roots_.add(input.readBytes());
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                intermediates_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000002;
              }
              intermediates_.add(input.readBytes());
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          roots_ = java.util.Collections.unmodifiableList(roots_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          intermediates_ = java.util.Collections.unmodifiableList(intermediates_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return types.Configuration.internal_static_types_CAConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return types.Configuration.internal_static_types_CAConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              types.Configuration.CAConfig.class, types.Configuration.CAConfig.Builder.class);
    }

    public static final int ROOTS_FIELD_NUMBER = 1;
    private java.util.List<com.google.protobuf.ByteString> roots_;
    /**
     * <code>repeated bytes roots = 1;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getRootsList() {
      return roots_;
    }
    /**
     * <code>repeated bytes roots = 1;</code>
     */
    public int getRootsCount() {
      return roots_.size();
    }
    /**
     * <code>repeated bytes roots = 1;</code>
     */
    public com.google.protobuf.ByteString getRoots(int index) {
      return roots_.get(index);
    }

    public static final int INTERMEDIATES_FIELD_NUMBER = 2;
    private java.util.List<com.google.protobuf.ByteString> intermediates_;
    /**
     * <code>repeated bytes intermediates = 2;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getIntermediatesList() {
      return intermediates_;
    }
    /**
     * <code>repeated bytes intermediates = 2;</code>
     */
    public int getIntermediatesCount() {
      return intermediates_.size();
    }
    /**
     * <code>repeated bytes intermediates = 2;</code>
     */
    public com.google.protobuf.ByteString getIntermediates(int index) {
      return intermediates_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < roots_.size(); i++) {
        output.writeBytes(1, roots_.get(i));
      }
      for (int i = 0; i < intermediates_.size(); i++) {
        output.writeBytes(2, intermediates_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < roots_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(roots_.get(i));
        }
        size += dataSize;
        size += 1 * getRootsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < intermediates_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(intermediates_.get(i));
        }
        size += dataSize;
        size += 1 * getIntermediatesList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof types.Configuration.CAConfig)) {
        return super.equals(obj);
      }
      types.Configuration.CAConfig other = (types.Configuration.CAConfig) obj;

      boolean result = true;
      result = result && getRootsList()
          .equals(other.getRootsList());
      result = result && getIntermediatesList()
          .equals(other.getIntermediatesList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRootsCount() > 0) {
        hash = (37 * hash) + ROOTS_FIELD_NUMBER;
        hash = (53 * hash) + getRootsList().hashCode();
      }
      if (getIntermediatesCount() > 0) {
        hash = (37 * hash) + INTERMEDIATES_FIELD_NUMBER;
        hash = (53 * hash) + getIntermediatesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static types.Configuration.CAConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.CAConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.CAConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.CAConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.CAConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.CAConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.CAConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Configuration.CAConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Configuration.CAConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static types.Configuration.CAConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Configuration.CAConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Configuration.CAConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(types.Configuration.CAConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code types.CAConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:types.CAConfig)
        types.Configuration.CAConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return types.Configuration.internal_static_types_CAConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return types.Configuration.internal_static_types_CAConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                types.Configuration.CAConfig.class, types.Configuration.CAConfig.Builder.class);
      }

      // Construct using types.Configuration.CAConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        roots_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        intermediates_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return types.Configuration.internal_static_types_CAConfig_descriptor;
      }

      @java.lang.Override
      public types.Configuration.CAConfig getDefaultInstanceForType() {
        return types.Configuration.CAConfig.getDefaultInstance();
      }

      @java.lang.Override
      public types.Configuration.CAConfig build() {
        types.Configuration.CAConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public types.Configuration.CAConfig buildPartial() {
        types.Configuration.CAConfig result = new types.Configuration.CAConfig(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          roots_ = java.util.Collections.unmodifiableList(roots_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.roots_ = roots_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          intermediates_ = java.util.Collections.unmodifiableList(intermediates_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.intermediates_ = intermediates_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof types.Configuration.CAConfig) {
          return mergeFrom((types.Configuration.CAConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(types.Configuration.CAConfig other) {
        if (other == types.Configuration.CAConfig.getDefaultInstance()) return this;
        if (!other.roots_.isEmpty()) {
          if (roots_.isEmpty()) {
            roots_ = other.roots_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureRootsIsMutable();
            roots_.addAll(other.roots_);
          }
          onChanged();
        }
        if (!other.intermediates_.isEmpty()) {
          if (intermediates_.isEmpty()) {
            intermediates_ = other.intermediates_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureIntermediatesIsMutable();
            intermediates_.addAll(other.intermediates_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        types.Configuration.CAConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (types.Configuration.CAConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.google.protobuf.ByteString> roots_ = java.util.Collections.emptyList();
      private void ensureRootsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          roots_ = new java.util.ArrayList<com.google.protobuf.ByteString>(roots_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated bytes roots = 1;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getRootsList() {
        return java.util.Collections.unmodifiableList(roots_);
      }
      /**
       * <code>repeated bytes roots = 1;</code>
       */
      public int getRootsCount() {
        return roots_.size();
      }
      /**
       * <code>repeated bytes roots = 1;</code>
       */
      public com.google.protobuf.ByteString getRoots(int index) {
        return roots_.get(index);
      }
      /**
       * <code>repeated bytes roots = 1;</code>
       */
      public Builder setRoots(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRootsIsMutable();
        roots_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes roots = 1;</code>
       */
      public Builder addRoots(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRootsIsMutable();
        roots_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes roots = 1;</code>
       */
      public Builder addAllRoots(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureRootsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, roots_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes roots = 1;</code>
       */
      public Builder clearRoots() {
        roots_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> intermediates_ = java.util.Collections.emptyList();
      private void ensureIntermediatesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          intermediates_ = new java.util.ArrayList<com.google.protobuf.ByteString>(intermediates_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated bytes intermediates = 2;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getIntermediatesList() {
        return java.util.Collections.unmodifiableList(intermediates_);
      }
      /**
       * <code>repeated bytes intermediates = 2;</code>
       */
      public int getIntermediatesCount() {
        return intermediates_.size();
      }
      /**
       * <code>repeated bytes intermediates = 2;</code>
       */
      public com.google.protobuf.ByteString getIntermediates(int index) {
        return intermediates_.get(index);
      }
      /**
       * <code>repeated bytes intermediates = 2;</code>
       */
      public Builder setIntermediates(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureIntermediatesIsMutable();
        intermediates_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes intermediates = 2;</code>
       */
      public Builder addIntermediates(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureIntermediatesIsMutable();
        intermediates_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes intermediates = 2;</code>
       */
      public Builder addAllIntermediates(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureIntermediatesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, intermediates_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes intermediates = 2;</code>
       */
      public Builder clearIntermediates() {
        intermediates_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:types.CAConfig)
    }

    // @@protoc_insertion_point(class_scope:types.CAConfig)
    private static final types.Configuration.CAConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new types.Configuration.CAConfig();
    }

    public static types.Configuration.CAConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CAConfig>
        PARSER = new com.google.protobuf.AbstractParser<CAConfig>() {
      @java.lang.Override
      public CAConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CAConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CAConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CAConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public types.Configuration.CAConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConsensusConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:types.ConsensusConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The consensus algorithm, currently only "raft" is supported.
     * </pre>
     *
     * <code>string algorithm = 1;</code>
     */
    java.lang.String getAlgorithm();
    /**
     * <pre>
     * The consensus algorithm, currently only "raft" is supported.
     * </pre>
     *
     * <code>string algorithm = 1;</code>
     */
    com.google.protobuf.ByteString
        getAlgorithmBytes();

    /**
     * <pre>
     * Peers that take part in consensus.
     * </pre>
     *
     * <code>repeated .types.PeerConfig members = 2;</code>
     */
    java.util.List<types.Configuration.PeerConfig> 
        getMembersList();
    /**
     * <pre>
     * Peers that take part in consensus.
     * </pre>
     *
     * <code>repeated .types.PeerConfig members = 2;</code>
     */
    types.Configuration.PeerConfig getMembers(int index);
    /**
     * <pre>
     * Peers that take part in consensus.
     * </pre>
     *
     * <code>repeated .types.PeerConfig members = 2;</code>
     */
    int getMembersCount();
    /**
     * <pre>
     * Peers that take part in consensus.
     * </pre>
     *
     * <code>repeated .types.PeerConfig members = 2;</code>
     */
    java.util.List<? extends types.Configuration.PeerConfigOrBuilder> 
        getMembersOrBuilderList();
    /**
     * <pre>
     * Peers that take part in consensus.
     * </pre>
     *
     * <code>repeated .types.PeerConfig members = 2;</code>
     */
    types.Configuration.PeerConfigOrBuilder getMembersOrBuilder(
        int index);

    /**
     * <pre>
     * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
     * </pre>
     *
     * <code>repeated .types.PeerConfig observers = 3;</code>
     */
    java.util.List<types.Configuration.PeerConfig> 
        getObserversList();
    /**
     * <pre>
     * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
     * </pre>
     *
     * <code>repeated .types.PeerConfig observers = 3;</code>
     */
    types.Configuration.PeerConfig getObservers(int index);
    /**
     * <pre>
     * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
     * </pre>
     *
     * <code>repeated .types.PeerConfig observers = 3;</code>
     */
    int getObserversCount();
    /**
     * <pre>
     * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
     * </pre>
     *
     * <code>repeated .types.PeerConfig observers = 3;</code>
     */
    java.util.List<? extends types.Configuration.PeerConfigOrBuilder> 
        getObserversOrBuilderList();
    /**
     * <pre>
     * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
     * </pre>
     *
     * <code>repeated .types.PeerConfig observers = 3;</code>
     */
    types.Configuration.PeerConfigOrBuilder getObserversOrBuilder(
        int index);

    /**
     * <pre>
     * Raft protocol parameters.
     * </pre>
     *
     * <code>.types.RaftConfig raft_config = 4;</code>
     */
    boolean hasRaftConfig();
    /**
     * <pre>
     * Raft protocol parameters.
     * </pre>
     *
     * <code>.types.RaftConfig raft_config = 4;</code>
     */
    types.Configuration.RaftConfig getRaftConfig();
    /**
     * <pre>
     * Raft protocol parameters.
     * </pre>
     *
     * <code>.types.RaftConfig raft_config = 4;</code>
     */
    types.Configuration.RaftConfigOrBuilder getRaftConfigOrBuilder();
  }
  /**
   * <pre>
   * The definitions of the clustered consensus algorithm, members, and parameters.
   * </pre>
   *
   * Protobuf type {@code types.ConsensusConfig}
   */
  public  static final class ConsensusConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:types.ConsensusConfig)
      ConsensusConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConsensusConfig.newBuilder() to construct.
    private ConsensusConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConsensusConfig() {
      algorithm_ = "";
      members_ = java.util.Collections.emptyList();
      observers_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConsensusConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              algorithm_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                members_ = new java.util.ArrayList<types.Configuration.PeerConfig>();
                mutable_bitField0_ |= 0x00000002;
              }
              members_.add(
                  input.readMessage(types.Configuration.PeerConfig.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                observers_ = new java.util.ArrayList<types.Configuration.PeerConfig>();
                mutable_bitField0_ |= 0x00000004;
              }
              observers_.add(
                  input.readMessage(types.Configuration.PeerConfig.parser(), extensionRegistry));
              break;
            }
            case 34: {
              types.Configuration.RaftConfig.Builder subBuilder = null;
              if (raftConfig_ != null) {
                subBuilder = raftConfig_.toBuilder();
              }
              raftConfig_ = input.readMessage(types.Configuration.RaftConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(raftConfig_);
                raftConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          members_ = java.util.Collections.unmodifiableList(members_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          observers_ = java.util.Collections.unmodifiableList(observers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return types.Configuration.internal_static_types_ConsensusConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return types.Configuration.internal_static_types_ConsensusConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              types.Configuration.ConsensusConfig.class, types.Configuration.ConsensusConfig.Builder.class);
    }

    private int bitField0_;
    public static final int ALGORITHM_FIELD_NUMBER = 1;
    private volatile java.lang.Object algorithm_;
    /**
     * <pre>
     * The consensus algorithm, currently only "raft" is supported.
     * </pre>
     *
     * <code>string algorithm = 1;</code>
     */
    public java.lang.String getAlgorithm() {
      java.lang.Object ref = algorithm_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        algorithm_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The consensus algorithm, currently only "raft" is supported.
     * </pre>
     *
     * <code>string algorithm = 1;</code>
     */
    public com.google.protobuf.ByteString
        getAlgorithmBytes() {
      java.lang.Object ref = algorithm_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        algorithm_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MEMBERS_FIELD_NUMBER = 2;
    private java.util.List<types.Configuration.PeerConfig> members_;
    /**
     * <pre>
     * Peers that take part in consensus.
     * </pre>
     *
     * <code>repeated .types.PeerConfig members = 2;</code>
     */
    public java.util.List<types.Configuration.PeerConfig> getMembersList() {
      return members_;
    }
    /**
     * <pre>
     * Peers that take part in consensus.
     * </pre>
     *
     * <code>repeated .types.PeerConfig members = 2;</code>
     */
    public java.util.List<? extends types.Configuration.PeerConfigOrBuilder> 
        getMembersOrBuilderList() {
      return members_;
    }
    /**
     * <pre>
     * Peers that take part in consensus.
     * </pre>
     *
     * <code>repeated .types.PeerConfig members = 2;</code>
     */
    public int getMembersCount() {
      return members_.size();
    }
    /**
     * <pre>
     * Peers that take part in consensus.
     * </pre>
     *
     * <code>repeated .types.PeerConfig members = 2;</code>
     */
    public types.Configuration.PeerConfig getMembers(int index) {
      return members_.get(index);
    }
    /**
     * <pre>
     * Peers that take part in consensus.
     * </pre>
     *
     * <code>repeated .types.PeerConfig members = 2;</code>
     */
    public types.Configuration.PeerConfigOrBuilder getMembersOrBuilder(
        int index) {
      return members_.get(index);
    }

    public static final int OBSERVERS_FIELD_NUMBER = 3;
    private java.util.List<types.Configuration.PeerConfig> observers_;
    /**
     * <pre>
     * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
     * </pre>
     *
     * <code>repeated .types.PeerConfig observers = 3;</code>
     */
    public java.util.List<types.Configuration.PeerConfig> getObserversList() {
      return observers_;
    }
    /**
     * <pre>
     * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
     * </pre>
     *
     * <code>repeated .types.PeerConfig observers = 3;</code>
     */
    public java.util.List<? extends types.Configuration.PeerConfigOrBuilder> 
        getObserversOrBuilderList() {
      return observers_;
    }
    /**
     * <pre>
     * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
     * </pre>
     *
     * <code>repeated .types.PeerConfig observers = 3;</code>
     */
    public int getObserversCount() {
      return observers_.size();
    }
    /**
     * <pre>
     * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
     * </pre>
     *
     * <code>repeated .types.PeerConfig observers = 3;</code>
     */
    public types.Configuration.PeerConfig getObservers(int index) {
      return observers_.get(index);
    }
    /**
     * <pre>
     * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
     * </pre>
     *
     * <code>repeated .types.PeerConfig observers = 3;</code>
     */
    public types.Configuration.PeerConfigOrBuilder getObserversOrBuilder(
        int index) {
      return observers_.get(index);
    }

    public static final int RAFT_CONFIG_FIELD_NUMBER = 4;
    private types.Configuration.RaftConfig raftConfig_;
    /**
     * <pre>
     * Raft protocol parameters.
     * </pre>
     *
     * <code>.types.RaftConfig raft_config = 4;</code>
     */
    public boolean hasRaftConfig() {
      return raftConfig_ != null;
    }
    /**
     * <pre>
     * Raft protocol parameters.
     * </pre>
     *
     * <code>.types.RaftConfig raft_config = 4;</code>
     */
    public types.Configuration.RaftConfig getRaftConfig() {
      return raftConfig_ == null ? types.Configuration.RaftConfig.getDefaultInstance() : raftConfig_;
    }
    /**
     * <pre>
     * Raft protocol parameters.
     * </pre>
     *
     * <code>.types.RaftConfig raft_config = 4;</code>
     */
    public types.Configuration.RaftConfigOrBuilder getRaftConfigOrBuilder() {
      return getRaftConfig();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getAlgorithmBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, algorithm_);
      }
      for (int i = 0; i < members_.size(); i++) {
        output.writeMessage(2, members_.get(i));
      }
      for (int i = 0; i < observers_.size(); i++) {
        output.writeMessage(3, observers_.get(i));
      }
      if (raftConfig_ != null) {
        output.writeMessage(4, getRaftConfig());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getAlgorithmBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, algorithm_);
      }
      for (int i = 0; i < members_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, members_.get(i));
      }
      for (int i = 0; i < observers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, observers_.get(i));
      }
      if (raftConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getRaftConfig());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof types.Configuration.ConsensusConfig)) {
        return super.equals(obj);
      }
      types.Configuration.ConsensusConfig other = (types.Configuration.ConsensusConfig) obj;

      boolean result = true;
      result = result && getAlgorithm()
          .equals(other.getAlgorithm());
      result = result && getMembersList()
          .equals(other.getMembersList());
      result = result && getObserversList()
          .equals(other.getObserversList());
      result = result && (hasRaftConfig() == other.hasRaftConfig());
      if (hasRaftConfig()) {
        result = result && getRaftConfig()
            .equals(other.getRaftConfig());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ALGORITHM_FIELD_NUMBER;
      hash = (53 * hash) + getAlgorithm().hashCode();
      if (getMembersCount() > 0) {
        hash = (37 * hash) + MEMBERS_FIELD_NUMBER;
        hash = (53 * hash) + getMembersList().hashCode();
      }
      if (getObserversCount() > 0) {
        hash = (37 * hash) + OBSERVERS_FIELD_NUMBER;
        hash = (53 * hash) + getObserversList().hashCode();
      }
      if (hasRaftConfig()) {
        hash = (37 * hash) + RAFT_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getRaftConfig().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static types.Configuration.ConsensusConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.ConsensusConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.ConsensusConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.ConsensusConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.ConsensusConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.ConsensusConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.ConsensusConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Configuration.ConsensusConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Configuration.ConsensusConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static types.Configuration.ConsensusConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Configuration.ConsensusConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Configuration.ConsensusConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(types.Configuration.ConsensusConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The definitions of the clustered consensus algorithm, members, and parameters.
     * </pre>
     *
     * Protobuf type {@code types.ConsensusConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:types.ConsensusConfig)
        types.Configuration.ConsensusConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return types.Configuration.internal_static_types_ConsensusConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return types.Configuration.internal_static_types_ConsensusConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                types.Configuration.ConsensusConfig.class, types.Configuration.ConsensusConfig.Builder.class);
      }

      // Construct using types.Configuration.ConsensusConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMembersFieldBuilder();
          getObserversFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        algorithm_ = "";

        if (membersBuilder_ == null) {
          members_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          membersBuilder_.clear();
        }
        if (observersBuilder_ == null) {
          observers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          observersBuilder_.clear();
        }
        if (raftConfigBuilder_ == null) {
          raftConfig_ = null;
        } else {
          raftConfig_ = null;
          raftConfigBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return types.Configuration.internal_static_types_ConsensusConfig_descriptor;
      }

      @java.lang.Override
      public types.Configuration.ConsensusConfig getDefaultInstanceForType() {
        return types.Configuration.ConsensusConfig.getDefaultInstance();
      }

      @java.lang.Override
      public types.Configuration.ConsensusConfig build() {
        types.Configuration.ConsensusConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public types.Configuration.ConsensusConfig buildPartial() {
        types.Configuration.ConsensusConfig result = new types.Configuration.ConsensusConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.algorithm_ = algorithm_;
        if (membersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            members_ = java.util.Collections.unmodifiableList(members_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.members_ = members_;
        } else {
          result.members_ = membersBuilder_.build();
        }
        if (observersBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            observers_ = java.util.Collections.unmodifiableList(observers_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.observers_ = observers_;
        } else {
          result.observers_ = observersBuilder_.build();
        }
        if (raftConfigBuilder_ == null) {
          result.raftConfig_ = raftConfig_;
        } else {
          result.raftConfig_ = raftConfigBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof types.Configuration.ConsensusConfig) {
          return mergeFrom((types.Configuration.ConsensusConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(types.Configuration.ConsensusConfig other) {
        if (other == types.Configuration.ConsensusConfig.getDefaultInstance()) return this;
        if (!other.getAlgorithm().isEmpty()) {
          algorithm_ = other.algorithm_;
          onChanged();
        }
        if (membersBuilder_ == null) {
          if (!other.members_.isEmpty()) {
            if (members_.isEmpty()) {
              members_ = other.members_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMembersIsMutable();
              members_.addAll(other.members_);
            }
            onChanged();
          }
        } else {
          if (!other.members_.isEmpty()) {
            if (membersBuilder_.isEmpty()) {
              membersBuilder_.dispose();
              membersBuilder_ = null;
              members_ = other.members_;
              bitField0_ = (bitField0_ & ~0x00000002);
              membersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMembersFieldBuilder() : null;
            } else {
              membersBuilder_.addAllMessages(other.members_);
            }
          }
        }
        if (observersBuilder_ == null) {
          if (!other.observers_.isEmpty()) {
            if (observers_.isEmpty()) {
              observers_ = other.observers_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureObserversIsMutable();
              observers_.addAll(other.observers_);
            }
            onChanged();
          }
        } else {
          if (!other.observers_.isEmpty()) {
            if (observersBuilder_.isEmpty()) {
              observersBuilder_.dispose();
              observersBuilder_ = null;
              observers_ = other.observers_;
              bitField0_ = (bitField0_ & ~0x00000004);
              observersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getObserversFieldBuilder() : null;
            } else {
              observersBuilder_.addAllMessages(other.observers_);
            }
          }
        }
        if (other.hasRaftConfig()) {
          mergeRaftConfig(other.getRaftConfig());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        types.Configuration.ConsensusConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (types.Configuration.ConsensusConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object algorithm_ = "";
      /**
       * <pre>
       * The consensus algorithm, currently only "raft" is supported.
       * </pre>
       *
       * <code>string algorithm = 1;</code>
       */
      public java.lang.String getAlgorithm() {
        java.lang.Object ref = algorithm_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          algorithm_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The consensus algorithm, currently only "raft" is supported.
       * </pre>
       *
       * <code>string algorithm = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAlgorithmBytes() {
        java.lang.Object ref = algorithm_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          algorithm_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The consensus algorithm, currently only "raft" is supported.
       * </pre>
       *
       * <code>string algorithm = 1;</code>
       */
      public Builder setAlgorithm(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        algorithm_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The consensus algorithm, currently only "raft" is supported.
       * </pre>
       *
       * <code>string algorithm = 1;</code>
       */
      public Builder clearAlgorithm() {
        
        algorithm_ = getDefaultInstance().getAlgorithm();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The consensus algorithm, currently only "raft" is supported.
       * </pre>
       *
       * <code>string algorithm = 1;</code>
       */
      public Builder setAlgorithmBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        algorithm_ = value;
        onChanged();
        return this;
      }

      private java.util.List<types.Configuration.PeerConfig> members_ =
        java.util.Collections.emptyList();
      private void ensureMembersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          members_ = new java.util.ArrayList<types.Configuration.PeerConfig>(members_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          types.Configuration.PeerConfig, types.Configuration.PeerConfig.Builder, types.Configuration.PeerConfigOrBuilder> membersBuilder_;

      /**
       * <pre>
       * Peers that take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig members = 2;</code>
       */
      public java.util.List<types.Configuration.PeerConfig> getMembersList() {
        if (membersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(members_);
        } else {
          return membersBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Peers that take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig members = 2;</code>
       */
      public int getMembersCount() {
        if (membersBuilder_ == null) {
          return members_.size();
        } else {
          return membersBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Peers that take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig members = 2;</code>
       */
      public types.Configuration.PeerConfig getMembers(int index) {
        if (membersBuilder_ == null) {
          return members_.get(index);
        } else {
          return membersBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Peers that take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig members = 2;</code>
       */
      public Builder setMembers(
          int index, types.Configuration.PeerConfig value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.set(index, value);
          onChanged();
        } else {
          membersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Peers that take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig members = 2;</code>
       */
      public Builder setMembers(
          int index, types.Configuration.PeerConfig.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.set(index, builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Peers that take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig members = 2;</code>
       */
      public Builder addMembers(types.Configuration.PeerConfig value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.add(value);
          onChanged();
        } else {
          membersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Peers that take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig members = 2;</code>
       */
      public Builder addMembers(
          int index, types.Configuration.PeerConfig value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.add(index, value);
          onChanged();
        } else {
          membersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Peers that take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig members = 2;</code>
       */
      public Builder addMembers(
          types.Configuration.PeerConfig.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.add(builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Peers that take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig members = 2;</code>
       */
      public Builder addMembers(
          int index, types.Configuration.PeerConfig.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.add(index, builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Peers that take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig members = 2;</code>
       */
      public Builder addAllMembers(
          java.lang.Iterable<? extends types.Configuration.PeerConfig> values) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, members_);
          onChanged();
        } else {
          membersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Peers that take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig members = 2;</code>
       */
      public Builder clearMembers() {
        if (membersBuilder_ == null) {
          members_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          membersBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Peers that take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig members = 2;</code>
       */
      public Builder removeMembers(int index) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.remove(index);
          onChanged();
        } else {
          membersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Peers that take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig members = 2;</code>
       */
      public types.Configuration.PeerConfig.Builder getMembersBuilder(
          int index) {
        return getMembersFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Peers that take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig members = 2;</code>
       */
      public types.Configuration.PeerConfigOrBuilder getMembersOrBuilder(
          int index) {
        if (membersBuilder_ == null) {
          return members_.get(index);  } else {
          return membersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Peers that take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig members = 2;</code>
       */
      public java.util.List<? extends types.Configuration.PeerConfigOrBuilder> 
           getMembersOrBuilderList() {
        if (membersBuilder_ != null) {
          return membersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(members_);
        }
      }
      /**
       * <pre>
       * Peers that take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig members = 2;</code>
       */
      public types.Configuration.PeerConfig.Builder addMembersBuilder() {
        return getMembersFieldBuilder().addBuilder(
            types.Configuration.PeerConfig.getDefaultInstance());
      }
      /**
       * <pre>
       * Peers that take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig members = 2;</code>
       */
      public types.Configuration.PeerConfig.Builder addMembersBuilder(
          int index) {
        return getMembersFieldBuilder().addBuilder(
            index, types.Configuration.PeerConfig.getDefaultInstance());
      }
      /**
       * <pre>
       * Peers that take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig members = 2;</code>
       */
      public java.util.List<types.Configuration.PeerConfig.Builder> 
           getMembersBuilderList() {
        return getMembersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          types.Configuration.PeerConfig, types.Configuration.PeerConfig.Builder, types.Configuration.PeerConfigOrBuilder> 
          getMembersFieldBuilder() {
        if (membersBuilder_ == null) {
          membersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              types.Configuration.PeerConfig, types.Configuration.PeerConfig.Builder, types.Configuration.PeerConfigOrBuilder>(
                  members_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          members_ = null;
        }
        return membersBuilder_;
      }

      private java.util.List<types.Configuration.PeerConfig> observers_ =
        java.util.Collections.emptyList();
      private void ensureObserversIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          observers_ = new java.util.ArrayList<types.Configuration.PeerConfig>(observers_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          types.Configuration.PeerConfig, types.Configuration.PeerConfig.Builder, types.Configuration.PeerConfigOrBuilder> observersBuilder_;

      /**
       * <pre>
       * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig observers = 3;</code>
       */
      public java.util.List<types.Configuration.PeerConfig> getObserversList() {
        if (observersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(observers_);
        } else {
          return observersBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig observers = 3;</code>
       */
      public int getObserversCount() {
        if (observersBuilder_ == null) {
          return observers_.size();
        } else {
          return observersBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig observers = 3;</code>
       */
      public types.Configuration.PeerConfig getObservers(int index) {
        if (observersBuilder_ == null) {
          return observers_.get(index);
        } else {
          return observersBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig observers = 3;</code>
       */
      public Builder setObservers(
          int index, types.Configuration.PeerConfig value) {
        if (observersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObserversIsMutable();
          observers_.set(index, value);
          onChanged();
        } else {
          observersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig observers = 3;</code>
       */
      public Builder setObservers(
          int index, types.Configuration.PeerConfig.Builder builderForValue) {
        if (observersBuilder_ == null) {
          ensureObserversIsMutable();
          observers_.set(index, builderForValue.build());
          onChanged();
        } else {
          observersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig observers = 3;</code>
       */
      public Builder addObservers(types.Configuration.PeerConfig value) {
        if (observersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObserversIsMutable();
          observers_.add(value);
          onChanged();
        } else {
          observersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig observers = 3;</code>
       */
      public Builder addObservers(
          int index, types.Configuration.PeerConfig value) {
        if (observersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObserversIsMutable();
          observers_.add(index, value);
          onChanged();
        } else {
          observersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig observers = 3;</code>
       */
      public Builder addObservers(
          types.Configuration.PeerConfig.Builder builderForValue) {
        if (observersBuilder_ == null) {
          ensureObserversIsMutable();
          observers_.add(builderForValue.build());
          onChanged();
        } else {
          observersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig observers = 3;</code>
       */
      public Builder addObservers(
          int index, types.Configuration.PeerConfig.Builder builderForValue) {
        if (observersBuilder_ == null) {
          ensureObserversIsMutable();
          observers_.add(index, builderForValue.build());
          onChanged();
        } else {
          observersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig observers = 3;</code>
       */
      public Builder addAllObservers(
          java.lang.Iterable<? extends types.Configuration.PeerConfig> values) {
        if (observersBuilder_ == null) {
          ensureObserversIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, observers_);
          onChanged();
        } else {
          observersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig observers = 3;</code>
       */
      public Builder clearObservers() {
        if (observersBuilder_ == null) {
          observers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          observersBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig observers = 3;</code>
       */
      public Builder removeObservers(int index) {
        if (observersBuilder_ == null) {
          ensureObserversIsMutable();
          observers_.remove(index);
          onChanged();
        } else {
          observersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig observers = 3;</code>
       */
      public types.Configuration.PeerConfig.Builder getObserversBuilder(
          int index) {
        return getObserversFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig observers = 3;</code>
       */
      public types.Configuration.PeerConfigOrBuilder getObserversOrBuilder(
          int index) {
        if (observersBuilder_ == null) {
          return observers_.get(index);  } else {
          return observersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig observers = 3;</code>
       */
      public java.util.List<? extends types.Configuration.PeerConfigOrBuilder> 
           getObserversOrBuilderList() {
        if (observersBuilder_ != null) {
          return observersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(observers_);
        }
      }
      /**
       * <pre>
       * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig observers = 3;</code>
       */
      public types.Configuration.PeerConfig.Builder addObserversBuilder() {
        return getObserversFieldBuilder().addBuilder(
            types.Configuration.PeerConfig.getDefaultInstance());
      }
      /**
       * <pre>
       * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig observers = 3;</code>
       */
      public types.Configuration.PeerConfig.Builder addObserversBuilder(
          int index) {
        return getObserversFieldBuilder().addBuilder(
            index, types.Configuration.PeerConfig.getDefaultInstance());
      }
      /**
       * <pre>
       * Peers that are allowed to connect and fetch the ledger from members, but do not take part in consensus.
       * </pre>
       *
       * <code>repeated .types.PeerConfig observers = 3;</code>
       */
      public java.util.List<types.Configuration.PeerConfig.Builder> 
           getObserversBuilderList() {
        return getObserversFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          types.Configuration.PeerConfig, types.Configuration.PeerConfig.Builder, types.Configuration.PeerConfigOrBuilder> 
          getObserversFieldBuilder() {
        if (observersBuilder_ == null) {
          observersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              types.Configuration.PeerConfig, types.Configuration.PeerConfig.Builder, types.Configuration.PeerConfigOrBuilder>(
                  observers_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          observers_ = null;
        }
        return observersBuilder_;
      }

      private types.Configuration.RaftConfig raftConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          types.Configuration.RaftConfig, types.Configuration.RaftConfig.Builder, types.Configuration.RaftConfigOrBuilder> raftConfigBuilder_;
      /**
       * <pre>
       * Raft protocol parameters.
       * </pre>
       *
       * <code>.types.RaftConfig raft_config = 4;</code>
       */
      public boolean hasRaftConfig() {
        return raftConfigBuilder_ != null || raftConfig_ != null;
      }
      /**
       * <pre>
       * Raft protocol parameters.
       * </pre>
       *
       * <code>.types.RaftConfig raft_config = 4;</code>
       */
      public types.Configuration.RaftConfig getRaftConfig() {
        if (raftConfigBuilder_ == null) {
          return raftConfig_ == null ? types.Configuration.RaftConfig.getDefaultInstance() : raftConfig_;
        } else {
          return raftConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Raft protocol parameters.
       * </pre>
       *
       * <code>.types.RaftConfig raft_config = 4;</code>
       */
      public Builder setRaftConfig(types.Configuration.RaftConfig value) {
        if (raftConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          raftConfig_ = value;
          onChanged();
        } else {
          raftConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Raft protocol parameters.
       * </pre>
       *
       * <code>.types.RaftConfig raft_config = 4;</code>
       */
      public Builder setRaftConfig(
          types.Configuration.RaftConfig.Builder builderForValue) {
        if (raftConfigBuilder_ == null) {
          raftConfig_ = builderForValue.build();
          onChanged();
        } else {
          raftConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Raft protocol parameters.
       * </pre>
       *
       * <code>.types.RaftConfig raft_config = 4;</code>
       */
      public Builder mergeRaftConfig(types.Configuration.RaftConfig value) {
        if (raftConfigBuilder_ == null) {
          if (raftConfig_ != null) {
            raftConfig_ =
              types.Configuration.RaftConfig.newBuilder(raftConfig_).mergeFrom(value).buildPartial();
          } else {
            raftConfig_ = value;
          }
          onChanged();
        } else {
          raftConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Raft protocol parameters.
       * </pre>
       *
       * <code>.types.RaftConfig raft_config = 4;</code>
       */
      public Builder clearRaftConfig() {
        if (raftConfigBuilder_ == null) {
          raftConfig_ = null;
          onChanged();
        } else {
          raftConfig_ = null;
          raftConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Raft protocol parameters.
       * </pre>
       *
       * <code>.types.RaftConfig raft_config = 4;</code>
       */
      public types.Configuration.RaftConfig.Builder getRaftConfigBuilder() {
        
        onChanged();
        return getRaftConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Raft protocol parameters.
       * </pre>
       *
       * <code>.types.RaftConfig raft_config = 4;</code>
       */
      public types.Configuration.RaftConfigOrBuilder getRaftConfigOrBuilder() {
        if (raftConfigBuilder_ != null) {
          return raftConfigBuilder_.getMessageOrBuilder();
        } else {
          return raftConfig_ == null ?
              types.Configuration.RaftConfig.getDefaultInstance() : raftConfig_;
        }
      }
      /**
       * <pre>
       * Raft protocol parameters.
       * </pre>
       *
       * <code>.types.RaftConfig raft_config = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          types.Configuration.RaftConfig, types.Configuration.RaftConfig.Builder, types.Configuration.RaftConfigOrBuilder> 
          getRaftConfigFieldBuilder() {
        if (raftConfigBuilder_ == null) {
          raftConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              types.Configuration.RaftConfig, types.Configuration.RaftConfig.Builder, types.Configuration.RaftConfigOrBuilder>(
                  getRaftConfig(),
                  getParentForChildren(),
                  isClean());
          raftConfig_ = null;
        }
        return raftConfigBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:types.ConsensusConfig)
    }

    // @@protoc_insertion_point(class_scope:types.ConsensusConfig)
    private static final types.Configuration.ConsensusConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new types.Configuration.ConsensusConfig();
    }

    public static types.Configuration.ConsensusConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConsensusConfig>
        PARSER = new com.google.protobuf.AbstractParser<ConsensusConfig>() {
      @java.lang.Override
      public ConsensusConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConsensusConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConsensusConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConsensusConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public types.Configuration.ConsensusConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PeerConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:types.PeerConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The node ID correlates the peer definition here with the NodeConfig.ID field.
     * </pre>
     *
     * <code>string node_id = 1;</code>
     */
    java.lang.String getNodeId();
    /**
     * <pre>
     * The node ID correlates the peer definition here with the NodeConfig.ID field.
     * </pre>
     *
     * <code>string node_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getNodeIdBytes();

    /**
     * <pre>
     * Raft ID must be &gt;0 for members, or =0 for observers.
     * </pre>
     *
     * <code>uint64 raft_id = 2;</code>
     */
    long getRaftId();

    /**
     * <pre>
     * The host name or IP address that is used by other peers to connect to this peer.
     * </pre>
     *
     * <code>string peer_host = 3;</code>
     */
    java.lang.String getPeerHost();
    /**
     * <pre>
     * The host name or IP address that is used by other peers to connect to this peer.
     * </pre>
     *
     * <code>string peer_host = 3;</code>
     */
    com.google.protobuf.ByteString
        getPeerHostBytes();

    /**
     * <pre>
     * The port that is used by other peers to connect to this peer.
     * </pre>
     *
     * <code>uint32 peer_port = 4;</code>
     */
    int getPeerPort();
  }
  /**
   * <pre>
   * PeerConfig defines a server that takes part in consensus, or an observer.
   * </pre>
   *
   * Protobuf type {@code types.PeerConfig}
   */
  public  static final class PeerConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:types.PeerConfig)
      PeerConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PeerConfig.newBuilder() to construct.
    private PeerConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PeerConfig() {
      nodeId_ = "";
      raftId_ = 0L;
      peerHost_ = "";
      peerPort_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PeerConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              nodeId_ = s;
              break;
            }
            case 16: {

              raftId_ = input.readUInt64();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              peerHost_ = s;
              break;
            }
            case 32: {

              peerPort_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return types.Configuration.internal_static_types_PeerConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return types.Configuration.internal_static_types_PeerConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              types.Configuration.PeerConfig.class, types.Configuration.PeerConfig.Builder.class);
    }

    public static final int NODE_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object nodeId_;
    /**
     * <pre>
     * The node ID correlates the peer definition here with the NodeConfig.ID field.
     * </pre>
     *
     * <code>string node_id = 1;</code>
     */
    public java.lang.String getNodeId() {
      java.lang.Object ref = nodeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nodeId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The node ID correlates the peer definition here with the NodeConfig.ID field.
     * </pre>
     *
     * <code>string node_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNodeIdBytes() {
      java.lang.Object ref = nodeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nodeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RAFT_ID_FIELD_NUMBER = 2;
    private long raftId_;
    /**
     * <pre>
     * Raft ID must be &gt;0 for members, or =0 for observers.
     * </pre>
     *
     * <code>uint64 raft_id = 2;</code>
     */
    public long getRaftId() {
      return raftId_;
    }

    public static final int PEER_HOST_FIELD_NUMBER = 3;
    private volatile java.lang.Object peerHost_;
    /**
     * <pre>
     * The host name or IP address that is used by other peers to connect to this peer.
     * </pre>
     *
     * <code>string peer_host = 3;</code>
     */
    public java.lang.String getPeerHost() {
      java.lang.Object ref = peerHost_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        peerHost_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The host name or IP address that is used by other peers to connect to this peer.
     * </pre>
     *
     * <code>string peer_host = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPeerHostBytes() {
      java.lang.Object ref = peerHost_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        peerHost_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PEER_PORT_FIELD_NUMBER = 4;
    private int peerPort_;
    /**
     * <pre>
     * The port that is used by other peers to connect to this peer.
     * </pre>
     *
     * <code>uint32 peer_port = 4;</code>
     */
    public int getPeerPort() {
      return peerPort_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNodeIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, nodeId_);
      }
      if (raftId_ != 0L) {
        output.writeUInt64(2, raftId_);
      }
      if (!getPeerHostBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, peerHost_);
      }
      if (peerPort_ != 0) {
        output.writeUInt32(4, peerPort_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNodeIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, nodeId_);
      }
      if (raftId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, raftId_);
      }
      if (!getPeerHostBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, peerHost_);
      }
      if (peerPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, peerPort_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof types.Configuration.PeerConfig)) {
        return super.equals(obj);
      }
      types.Configuration.PeerConfig other = (types.Configuration.PeerConfig) obj;

      boolean result = true;
      result = result && getNodeId()
          .equals(other.getNodeId());
      result = result && (getRaftId()
          == other.getRaftId());
      result = result && getPeerHost()
          .equals(other.getPeerHost());
      result = result && (getPeerPort()
          == other.getPeerPort());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getNodeId().hashCode();
      hash = (37 * hash) + RAFT_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRaftId());
      hash = (37 * hash) + PEER_HOST_FIELD_NUMBER;
      hash = (53 * hash) + getPeerHost().hashCode();
      hash = (37 * hash) + PEER_PORT_FIELD_NUMBER;
      hash = (53 * hash) + getPeerPort();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static types.Configuration.PeerConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.PeerConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.PeerConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.PeerConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.PeerConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.PeerConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.PeerConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Configuration.PeerConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Configuration.PeerConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static types.Configuration.PeerConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Configuration.PeerConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Configuration.PeerConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(types.Configuration.PeerConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * PeerConfig defines a server that takes part in consensus, or an observer.
     * </pre>
     *
     * Protobuf type {@code types.PeerConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:types.PeerConfig)
        types.Configuration.PeerConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return types.Configuration.internal_static_types_PeerConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return types.Configuration.internal_static_types_PeerConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                types.Configuration.PeerConfig.class, types.Configuration.PeerConfig.Builder.class);
      }

      // Construct using types.Configuration.PeerConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        nodeId_ = "";

        raftId_ = 0L;

        peerHost_ = "";

        peerPort_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return types.Configuration.internal_static_types_PeerConfig_descriptor;
      }

      @java.lang.Override
      public types.Configuration.PeerConfig getDefaultInstanceForType() {
        return types.Configuration.PeerConfig.getDefaultInstance();
      }

      @java.lang.Override
      public types.Configuration.PeerConfig build() {
        types.Configuration.PeerConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public types.Configuration.PeerConfig buildPartial() {
        types.Configuration.PeerConfig result = new types.Configuration.PeerConfig(this);
        result.nodeId_ = nodeId_;
        result.raftId_ = raftId_;
        result.peerHost_ = peerHost_;
        result.peerPort_ = peerPort_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof types.Configuration.PeerConfig) {
          return mergeFrom((types.Configuration.PeerConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(types.Configuration.PeerConfig other) {
        if (other == types.Configuration.PeerConfig.getDefaultInstance()) return this;
        if (!other.getNodeId().isEmpty()) {
          nodeId_ = other.nodeId_;
          onChanged();
        }
        if (other.getRaftId() != 0L) {
          setRaftId(other.getRaftId());
        }
        if (!other.getPeerHost().isEmpty()) {
          peerHost_ = other.peerHost_;
          onChanged();
        }
        if (other.getPeerPort() != 0) {
          setPeerPort(other.getPeerPort());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        types.Configuration.PeerConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (types.Configuration.PeerConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object nodeId_ = "";
      /**
       * <pre>
       * The node ID correlates the peer definition here with the NodeConfig.ID field.
       * </pre>
       *
       * <code>string node_id = 1;</code>
       */
      public java.lang.String getNodeId() {
        java.lang.Object ref = nodeId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          nodeId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The node ID correlates the peer definition here with the NodeConfig.ID field.
       * </pre>
       *
       * <code>string node_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNodeIdBytes() {
        java.lang.Object ref = nodeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nodeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The node ID correlates the peer definition here with the NodeConfig.ID field.
       * </pre>
       *
       * <code>string node_id = 1;</code>
       */
      public Builder setNodeId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The node ID correlates the peer definition here with the NodeConfig.ID field.
       * </pre>
       *
       * <code>string node_id = 1;</code>
       */
      public Builder clearNodeId() {
        
        nodeId_ = getDefaultInstance().getNodeId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The node ID correlates the peer definition here with the NodeConfig.ID field.
       * </pre>
       *
       * <code>string node_id = 1;</code>
       */
      public Builder setNodeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        nodeId_ = value;
        onChanged();
        return this;
      }

      private long raftId_ ;
      /**
       * <pre>
       * Raft ID must be &gt;0 for members, or =0 for observers.
       * </pre>
       *
       * <code>uint64 raft_id = 2;</code>
       */
      public long getRaftId() {
        return raftId_;
      }
      /**
       * <pre>
       * Raft ID must be &gt;0 for members, or =0 for observers.
       * </pre>
       *
       * <code>uint64 raft_id = 2;</code>
       */
      public Builder setRaftId(long value) {
        
        raftId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Raft ID must be &gt;0 for members, or =0 for observers.
       * </pre>
       *
       * <code>uint64 raft_id = 2;</code>
       */
      public Builder clearRaftId() {
        
        raftId_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object peerHost_ = "";
      /**
       * <pre>
       * The host name or IP address that is used by other peers to connect to this peer.
       * </pre>
       *
       * <code>string peer_host = 3;</code>
       */
      public java.lang.String getPeerHost() {
        java.lang.Object ref = peerHost_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          peerHost_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The host name or IP address that is used by other peers to connect to this peer.
       * </pre>
       *
       * <code>string peer_host = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPeerHostBytes() {
        java.lang.Object ref = peerHost_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          peerHost_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The host name or IP address that is used by other peers to connect to this peer.
       * </pre>
       *
       * <code>string peer_host = 3;</code>
       */
      public Builder setPeerHost(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        peerHost_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The host name or IP address that is used by other peers to connect to this peer.
       * </pre>
       *
       * <code>string peer_host = 3;</code>
       */
      public Builder clearPeerHost() {
        
        peerHost_ = getDefaultInstance().getPeerHost();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The host name or IP address that is used by other peers to connect to this peer.
       * </pre>
       *
       * <code>string peer_host = 3;</code>
       */
      public Builder setPeerHostBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        peerHost_ = value;
        onChanged();
        return this;
      }

      private int peerPort_ ;
      /**
       * <pre>
       * The port that is used by other peers to connect to this peer.
       * </pre>
       *
       * <code>uint32 peer_port = 4;</code>
       */
      public int getPeerPort() {
        return peerPort_;
      }
      /**
       * <pre>
       * The port that is used by other peers to connect to this peer.
       * </pre>
       *
       * <code>uint32 peer_port = 4;</code>
       */
      public Builder setPeerPort(int value) {
        
        peerPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The port that is used by other peers to connect to this peer.
       * </pre>
       *
       * <code>uint32 peer_port = 4;</code>
       */
      public Builder clearPeerPort() {
        
        peerPort_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:types.PeerConfig)
    }

    // @@protoc_insertion_point(class_scope:types.PeerConfig)
    private static final types.Configuration.PeerConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new types.Configuration.PeerConfig();
    }

    public static types.Configuration.PeerConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PeerConfig>
        PARSER = new com.google.protobuf.AbstractParser<PeerConfig>() {
      @java.lang.Override
      public PeerConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PeerConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PeerConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PeerConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public types.Configuration.PeerConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RaftConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:types.RaftConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Time interval between two Node.Tick invocations, e.g. 100ms.
     * Any duration string parsable by ParseDuration():
     * https://golang.org/pkg/time/#ParseDuration
     * </pre>
     *
     * <code>string tick_interval = 1;</code>
     */
    java.lang.String getTickInterval();
    /**
     * <pre>
     * Time interval between two Node.Tick invocations, e.g. 100ms.
     * Any duration string parsable by ParseDuration():
     * https://golang.org/pkg/time/#ParseDuration
     * </pre>
     *
     * <code>string tick_interval = 1;</code>
     */
    com.google.protobuf.ByteString
        getTickIntervalBytes();

    /**
     * <pre>
     * The number of Node.Tick invocations that must pass  between elections.
     * That is, if a follower does not receive any
     * message from the leader of current term before ElectionTick has
     * elapsed, it will become candidate and start an election.
     * electionTicks must be greater than heartbeatTicks.
     * </pre>
     *
     * <code>uint32 election_ticks = 2;</code>
     */
    int getElectionTicks();

    /**
     * <pre>
     * The number of Node.Tick invocations that must
     * pass between heartbeats. That is, a leader sends heartbeat
     * messages to maintain its leadership every HeartbeatTick ticks.
     * </pre>
     *
     * <code>uint32 heartbeat_ticks = 3;</code>
     */
    int getHeartbeatTicks();

    /**
     * <pre>
     * Limits the max number of in-flight blocks (i.e. Raft messages).
     * </pre>
     *
     * <code>uint32 max_inflight_blocks = 4;</code>
     */
    int getMaxInflightBlocks();

    /**
     * <pre>
     * Take a snapshot when cumulative data since last snapshot exceeds a certain size in bytes.
     * </pre>
     *
     * <code>uint64 snapshot_interval_size = 5;</code>
     */
    long getSnapshotIntervalSize();

    /**
     * <pre>
     * The maximal Raft ID in the cluster, during the entire lifetime of the cluster.
     * This is internally computed by the server when a config transaction commits and is read-only for clients (admins).
     * Raft IDs must be unique for all time, and may never be reused even for deleted peers. To enforce this Raft
     * requirement, we require that the Raft ID of a new peer added to the cluster must be higher than 'max_raft_id'.
     * We recommend to start a cluster with low ID numbers, e.g. (1,2,3) =&gt; 'max_raft_id'=3,
     * and then set the Raft ID of a new peer added to the cluster to 'max_raft_id'+1.
     * </pre>
     *
     * <code>uint64 max_raft_id = 6;</code>
     */
    long getMaxRaftId();
  }
  /**
   * Protobuf type {@code types.RaftConfig}
   */
  public  static final class RaftConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:types.RaftConfig)
      RaftConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RaftConfig.newBuilder() to construct.
    private RaftConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RaftConfig() {
      tickInterval_ = "";
      electionTicks_ = 0;
      heartbeatTicks_ = 0;
      maxInflightBlocks_ = 0;
      snapshotIntervalSize_ = 0L;
      maxRaftId_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RaftConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              tickInterval_ = s;
              break;
            }
            case 16: {

              electionTicks_ = input.readUInt32();
              break;
            }
            case 24: {

              heartbeatTicks_ = input.readUInt32();
              break;
            }
            case 32: {

              maxInflightBlocks_ = input.readUInt32();
              break;
            }
            case 40: {

              snapshotIntervalSize_ = input.readUInt64();
              break;
            }
            case 48: {

              maxRaftId_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return types.Configuration.internal_static_types_RaftConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return types.Configuration.internal_static_types_RaftConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              types.Configuration.RaftConfig.class, types.Configuration.RaftConfig.Builder.class);
    }

    public static final int TICK_INTERVAL_FIELD_NUMBER = 1;
    private volatile java.lang.Object tickInterval_;
    /**
     * <pre>
     * Time interval between two Node.Tick invocations, e.g. 100ms.
     * Any duration string parsable by ParseDuration():
     * https://golang.org/pkg/time/#ParseDuration
     * </pre>
     *
     * <code>string tick_interval = 1;</code>
     */
    public java.lang.String getTickInterval() {
      java.lang.Object ref = tickInterval_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tickInterval_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Time interval between two Node.Tick invocations, e.g. 100ms.
     * Any duration string parsable by ParseDuration():
     * https://golang.org/pkg/time/#ParseDuration
     * </pre>
     *
     * <code>string tick_interval = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTickIntervalBytes() {
      java.lang.Object ref = tickInterval_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tickInterval_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ELECTION_TICKS_FIELD_NUMBER = 2;
    private int electionTicks_;
    /**
     * <pre>
     * The number of Node.Tick invocations that must pass  between elections.
     * That is, if a follower does not receive any
     * message from the leader of current term before ElectionTick has
     * elapsed, it will become candidate and start an election.
     * electionTicks must be greater than heartbeatTicks.
     * </pre>
     *
     * <code>uint32 election_ticks = 2;</code>
     */
    public int getElectionTicks() {
      return electionTicks_;
    }

    public static final int HEARTBEAT_TICKS_FIELD_NUMBER = 3;
    private int heartbeatTicks_;
    /**
     * <pre>
     * The number of Node.Tick invocations that must
     * pass between heartbeats. That is, a leader sends heartbeat
     * messages to maintain its leadership every HeartbeatTick ticks.
     * </pre>
     *
     * <code>uint32 heartbeat_ticks = 3;</code>
     */
    public int getHeartbeatTicks() {
      return heartbeatTicks_;
    }

    public static final int MAX_INFLIGHT_BLOCKS_FIELD_NUMBER = 4;
    private int maxInflightBlocks_;
    /**
     * <pre>
     * Limits the max number of in-flight blocks (i.e. Raft messages).
     * </pre>
     *
     * <code>uint32 max_inflight_blocks = 4;</code>
     */
    public int getMaxInflightBlocks() {
      return maxInflightBlocks_;
    }

    public static final int SNAPSHOT_INTERVAL_SIZE_FIELD_NUMBER = 5;
    private long snapshotIntervalSize_;
    /**
     * <pre>
     * Take a snapshot when cumulative data since last snapshot exceeds a certain size in bytes.
     * </pre>
     *
     * <code>uint64 snapshot_interval_size = 5;</code>
     */
    public long getSnapshotIntervalSize() {
      return snapshotIntervalSize_;
    }

    public static final int MAX_RAFT_ID_FIELD_NUMBER = 6;
    private long maxRaftId_;
    /**
     * <pre>
     * The maximal Raft ID in the cluster, during the entire lifetime of the cluster.
     * This is internally computed by the server when a config transaction commits and is read-only for clients (admins).
     * Raft IDs must be unique for all time, and may never be reused even for deleted peers. To enforce this Raft
     * requirement, we require that the Raft ID of a new peer added to the cluster must be higher than 'max_raft_id'.
     * We recommend to start a cluster with low ID numbers, e.g. (1,2,3) =&gt; 'max_raft_id'=3,
     * and then set the Raft ID of a new peer added to the cluster to 'max_raft_id'+1.
     * </pre>
     *
     * <code>uint64 max_raft_id = 6;</code>
     */
    public long getMaxRaftId() {
      return maxRaftId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTickIntervalBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, tickInterval_);
      }
      if (electionTicks_ != 0) {
        output.writeUInt32(2, electionTicks_);
      }
      if (heartbeatTicks_ != 0) {
        output.writeUInt32(3, heartbeatTicks_);
      }
      if (maxInflightBlocks_ != 0) {
        output.writeUInt32(4, maxInflightBlocks_);
      }
      if (snapshotIntervalSize_ != 0L) {
        output.writeUInt64(5, snapshotIntervalSize_);
      }
      if (maxRaftId_ != 0L) {
        output.writeUInt64(6, maxRaftId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTickIntervalBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, tickInterval_);
      }
      if (electionTicks_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, electionTicks_);
      }
      if (heartbeatTicks_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, heartbeatTicks_);
      }
      if (maxInflightBlocks_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, maxInflightBlocks_);
      }
      if (snapshotIntervalSize_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, snapshotIntervalSize_);
      }
      if (maxRaftId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, maxRaftId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof types.Configuration.RaftConfig)) {
        return super.equals(obj);
      }
      types.Configuration.RaftConfig other = (types.Configuration.RaftConfig) obj;

      boolean result = true;
      result = result && getTickInterval()
          .equals(other.getTickInterval());
      result = result && (getElectionTicks()
          == other.getElectionTicks());
      result = result && (getHeartbeatTicks()
          == other.getHeartbeatTicks());
      result = result && (getMaxInflightBlocks()
          == other.getMaxInflightBlocks());
      result = result && (getSnapshotIntervalSize()
          == other.getSnapshotIntervalSize());
      result = result && (getMaxRaftId()
          == other.getMaxRaftId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TICK_INTERVAL_FIELD_NUMBER;
      hash = (53 * hash) + getTickInterval().hashCode();
      hash = (37 * hash) + ELECTION_TICKS_FIELD_NUMBER;
      hash = (53 * hash) + getElectionTicks();
      hash = (37 * hash) + HEARTBEAT_TICKS_FIELD_NUMBER;
      hash = (53 * hash) + getHeartbeatTicks();
      hash = (37 * hash) + MAX_INFLIGHT_BLOCKS_FIELD_NUMBER;
      hash = (53 * hash) + getMaxInflightBlocks();
      hash = (37 * hash) + SNAPSHOT_INTERVAL_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSnapshotIntervalSize());
      hash = (37 * hash) + MAX_RAFT_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMaxRaftId());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static types.Configuration.RaftConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.RaftConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.RaftConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.RaftConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.RaftConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.RaftConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.RaftConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Configuration.RaftConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Configuration.RaftConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static types.Configuration.RaftConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Configuration.RaftConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Configuration.RaftConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(types.Configuration.RaftConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code types.RaftConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:types.RaftConfig)
        types.Configuration.RaftConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return types.Configuration.internal_static_types_RaftConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return types.Configuration.internal_static_types_RaftConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                types.Configuration.RaftConfig.class, types.Configuration.RaftConfig.Builder.class);
      }

      // Construct using types.Configuration.RaftConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        tickInterval_ = "";

        electionTicks_ = 0;

        heartbeatTicks_ = 0;

        maxInflightBlocks_ = 0;

        snapshotIntervalSize_ = 0L;

        maxRaftId_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return types.Configuration.internal_static_types_RaftConfig_descriptor;
      }

      @java.lang.Override
      public types.Configuration.RaftConfig getDefaultInstanceForType() {
        return types.Configuration.RaftConfig.getDefaultInstance();
      }

      @java.lang.Override
      public types.Configuration.RaftConfig build() {
        types.Configuration.RaftConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public types.Configuration.RaftConfig buildPartial() {
        types.Configuration.RaftConfig result = new types.Configuration.RaftConfig(this);
        result.tickInterval_ = tickInterval_;
        result.electionTicks_ = electionTicks_;
        result.heartbeatTicks_ = heartbeatTicks_;
        result.maxInflightBlocks_ = maxInflightBlocks_;
        result.snapshotIntervalSize_ = snapshotIntervalSize_;
        result.maxRaftId_ = maxRaftId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof types.Configuration.RaftConfig) {
          return mergeFrom((types.Configuration.RaftConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(types.Configuration.RaftConfig other) {
        if (other == types.Configuration.RaftConfig.getDefaultInstance()) return this;
        if (!other.getTickInterval().isEmpty()) {
          tickInterval_ = other.tickInterval_;
          onChanged();
        }
        if (other.getElectionTicks() != 0) {
          setElectionTicks(other.getElectionTicks());
        }
        if (other.getHeartbeatTicks() != 0) {
          setHeartbeatTicks(other.getHeartbeatTicks());
        }
        if (other.getMaxInflightBlocks() != 0) {
          setMaxInflightBlocks(other.getMaxInflightBlocks());
        }
        if (other.getSnapshotIntervalSize() != 0L) {
          setSnapshotIntervalSize(other.getSnapshotIntervalSize());
        }
        if (other.getMaxRaftId() != 0L) {
          setMaxRaftId(other.getMaxRaftId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        types.Configuration.RaftConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (types.Configuration.RaftConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object tickInterval_ = "";
      /**
       * <pre>
       * Time interval between two Node.Tick invocations, e.g. 100ms.
       * Any duration string parsable by ParseDuration():
       * https://golang.org/pkg/time/#ParseDuration
       * </pre>
       *
       * <code>string tick_interval = 1;</code>
       */
      public java.lang.String getTickInterval() {
        java.lang.Object ref = tickInterval_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          tickInterval_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Time interval between two Node.Tick invocations, e.g. 100ms.
       * Any duration string parsable by ParseDuration():
       * https://golang.org/pkg/time/#ParseDuration
       * </pre>
       *
       * <code>string tick_interval = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTickIntervalBytes() {
        java.lang.Object ref = tickInterval_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tickInterval_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Time interval between two Node.Tick invocations, e.g. 100ms.
       * Any duration string parsable by ParseDuration():
       * https://golang.org/pkg/time/#ParseDuration
       * </pre>
       *
       * <code>string tick_interval = 1;</code>
       */
      public Builder setTickInterval(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tickInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time interval between two Node.Tick invocations, e.g. 100ms.
       * Any duration string parsable by ParseDuration():
       * https://golang.org/pkg/time/#ParseDuration
       * </pre>
       *
       * <code>string tick_interval = 1;</code>
       */
      public Builder clearTickInterval() {
        
        tickInterval_ = getDefaultInstance().getTickInterval();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time interval between two Node.Tick invocations, e.g. 100ms.
       * Any duration string parsable by ParseDuration():
       * https://golang.org/pkg/time/#ParseDuration
       * </pre>
       *
       * <code>string tick_interval = 1;</code>
       */
      public Builder setTickIntervalBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tickInterval_ = value;
        onChanged();
        return this;
      }

      private int electionTicks_ ;
      /**
       * <pre>
       * The number of Node.Tick invocations that must pass  between elections.
       * That is, if a follower does not receive any
       * message from the leader of current term before ElectionTick has
       * elapsed, it will become candidate and start an election.
       * electionTicks must be greater than heartbeatTicks.
       * </pre>
       *
       * <code>uint32 election_ticks = 2;</code>
       */
      public int getElectionTicks() {
        return electionTicks_;
      }
      /**
       * <pre>
       * The number of Node.Tick invocations that must pass  between elections.
       * That is, if a follower does not receive any
       * message from the leader of current term before ElectionTick has
       * elapsed, it will become candidate and start an election.
       * electionTicks must be greater than heartbeatTicks.
       * </pre>
       *
       * <code>uint32 election_ticks = 2;</code>
       */
      public Builder setElectionTicks(int value) {
        
        electionTicks_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of Node.Tick invocations that must pass  between elections.
       * That is, if a follower does not receive any
       * message from the leader of current term before ElectionTick has
       * elapsed, it will become candidate and start an election.
       * electionTicks must be greater than heartbeatTicks.
       * </pre>
       *
       * <code>uint32 election_ticks = 2;</code>
       */
      public Builder clearElectionTicks() {
        
        electionTicks_ = 0;
        onChanged();
        return this;
      }

      private int heartbeatTicks_ ;
      /**
       * <pre>
       * The number of Node.Tick invocations that must
       * pass between heartbeats. That is, a leader sends heartbeat
       * messages to maintain its leadership every HeartbeatTick ticks.
       * </pre>
       *
       * <code>uint32 heartbeat_ticks = 3;</code>
       */
      public int getHeartbeatTicks() {
        return heartbeatTicks_;
      }
      /**
       * <pre>
       * The number of Node.Tick invocations that must
       * pass between heartbeats. That is, a leader sends heartbeat
       * messages to maintain its leadership every HeartbeatTick ticks.
       * </pre>
       *
       * <code>uint32 heartbeat_ticks = 3;</code>
       */
      public Builder setHeartbeatTicks(int value) {
        
        heartbeatTicks_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of Node.Tick invocations that must
       * pass between heartbeats. That is, a leader sends heartbeat
       * messages to maintain its leadership every HeartbeatTick ticks.
       * </pre>
       *
       * <code>uint32 heartbeat_ticks = 3;</code>
       */
      public Builder clearHeartbeatTicks() {
        
        heartbeatTicks_ = 0;
        onChanged();
        return this;
      }

      private int maxInflightBlocks_ ;
      /**
       * <pre>
       * Limits the max number of in-flight blocks (i.e. Raft messages).
       * </pre>
       *
       * <code>uint32 max_inflight_blocks = 4;</code>
       */
      public int getMaxInflightBlocks() {
        return maxInflightBlocks_;
      }
      /**
       * <pre>
       * Limits the max number of in-flight blocks (i.e. Raft messages).
       * </pre>
       *
       * <code>uint32 max_inflight_blocks = 4;</code>
       */
      public Builder setMaxInflightBlocks(int value) {
        
        maxInflightBlocks_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Limits the max number of in-flight blocks (i.e. Raft messages).
       * </pre>
       *
       * <code>uint32 max_inflight_blocks = 4;</code>
       */
      public Builder clearMaxInflightBlocks() {
        
        maxInflightBlocks_ = 0;
        onChanged();
        return this;
      }

      private long snapshotIntervalSize_ ;
      /**
       * <pre>
       * Take a snapshot when cumulative data since last snapshot exceeds a certain size in bytes.
       * </pre>
       *
       * <code>uint64 snapshot_interval_size = 5;</code>
       */
      public long getSnapshotIntervalSize() {
        return snapshotIntervalSize_;
      }
      /**
       * <pre>
       * Take a snapshot when cumulative data since last snapshot exceeds a certain size in bytes.
       * </pre>
       *
       * <code>uint64 snapshot_interval_size = 5;</code>
       */
      public Builder setSnapshotIntervalSize(long value) {
        
        snapshotIntervalSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Take a snapshot when cumulative data since last snapshot exceeds a certain size in bytes.
       * </pre>
       *
       * <code>uint64 snapshot_interval_size = 5;</code>
       */
      public Builder clearSnapshotIntervalSize() {
        
        snapshotIntervalSize_ = 0L;
        onChanged();
        return this;
      }

      private long maxRaftId_ ;
      /**
       * <pre>
       * The maximal Raft ID in the cluster, during the entire lifetime of the cluster.
       * This is internally computed by the server when a config transaction commits and is read-only for clients (admins).
       * Raft IDs must be unique for all time, and may never be reused even for deleted peers. To enforce this Raft
       * requirement, we require that the Raft ID of a new peer added to the cluster must be higher than 'max_raft_id'.
       * We recommend to start a cluster with low ID numbers, e.g. (1,2,3) =&gt; 'max_raft_id'=3,
       * and then set the Raft ID of a new peer added to the cluster to 'max_raft_id'+1.
       * </pre>
       *
       * <code>uint64 max_raft_id = 6;</code>
       */
      public long getMaxRaftId() {
        return maxRaftId_;
      }
      /**
       * <pre>
       * The maximal Raft ID in the cluster, during the entire lifetime of the cluster.
       * This is internally computed by the server when a config transaction commits and is read-only for clients (admins).
       * Raft IDs must be unique for all time, and may never be reused even for deleted peers. To enforce this Raft
       * requirement, we require that the Raft ID of a new peer added to the cluster must be higher than 'max_raft_id'.
       * We recommend to start a cluster with low ID numbers, e.g. (1,2,3) =&gt; 'max_raft_id'=3,
       * and then set the Raft ID of a new peer added to the cluster to 'max_raft_id'+1.
       * </pre>
       *
       * <code>uint64 max_raft_id = 6;</code>
       */
      public Builder setMaxRaftId(long value) {
        
        maxRaftId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The maximal Raft ID in the cluster, during the entire lifetime of the cluster.
       * This is internally computed by the server when a config transaction commits and is read-only for clients (admins).
       * Raft IDs must be unique for all time, and may never be reused even for deleted peers. To enforce this Raft
       * requirement, we require that the Raft ID of a new peer added to the cluster must be higher than 'max_raft_id'.
       * We recommend to start a cluster with low ID numbers, e.g. (1,2,3) =&gt; 'max_raft_id'=3,
       * and then set the Raft ID of a new peer added to the cluster to 'max_raft_id'+1.
       * </pre>
       *
       * <code>uint64 max_raft_id = 6;</code>
       */
      public Builder clearMaxRaftId() {
        
        maxRaftId_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:types.RaftConfig)
    }

    // @@protoc_insertion_point(class_scope:types.RaftConfig)
    private static final types.Configuration.RaftConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new types.Configuration.RaftConfig();
    }

    public static types.Configuration.RaftConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RaftConfig>
        PARSER = new com.google.protobuf.AbstractParser<RaftConfig>() {
      @java.lang.Override
      public RaftConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RaftConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RaftConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RaftConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public types.Configuration.RaftConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DatabaseConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:types.DatabaseConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>repeated string read_access_users = 2;</code>
     */
    java.util.List<java.lang.String>
        getReadAccessUsersList();
    /**
     * <code>repeated string read_access_users = 2;</code>
     */
    int getReadAccessUsersCount();
    /**
     * <code>repeated string read_access_users = 2;</code>
     */
    java.lang.String getReadAccessUsers(int index);
    /**
     * <code>repeated string read_access_users = 2;</code>
     */
    com.google.protobuf.ByteString
        getReadAccessUsersBytes(int index);

    /**
     * <code>repeated string write_access_users = 3;</code>
     */
    java.util.List<java.lang.String>
        getWriteAccessUsersList();
    /**
     * <code>repeated string write_access_users = 3;</code>
     */
    int getWriteAccessUsersCount();
    /**
     * <code>repeated string write_access_users = 3;</code>
     */
    java.lang.String getWriteAccessUsers(int index);
    /**
     * <code>repeated string write_access_users = 3;</code>
     */
    com.google.protobuf.ByteString
        getWriteAccessUsersBytes(int index);
  }
  /**
   * <pre>
   * Database configuration. Stores default read/write ACLs
   * Stored as value in _dbs system database under key 'name'
   * </pre>
   *
   * Protobuf type {@code types.DatabaseConfig}
   */
  public  static final class DatabaseConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:types.DatabaseConfig)
      DatabaseConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DatabaseConfig.newBuilder() to construct.
    private DatabaseConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DatabaseConfig() {
      name_ = "";
      readAccessUsers_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      writeAccessUsers_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DatabaseConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                readAccessUsers_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              readAccessUsers_.add(s);
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                writeAccessUsers_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              writeAccessUsers_.add(s);
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          readAccessUsers_ = readAccessUsers_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          writeAccessUsers_ = writeAccessUsers_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return types.Configuration.internal_static_types_DatabaseConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return types.Configuration.internal_static_types_DatabaseConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              types.Configuration.DatabaseConfig.class, types.Configuration.DatabaseConfig.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int READ_ACCESS_USERS_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList readAccessUsers_;
    /**
     * <code>repeated string read_access_users = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getReadAccessUsersList() {
      return readAccessUsers_;
    }
    /**
     * <code>repeated string read_access_users = 2;</code>
     */
    public int getReadAccessUsersCount() {
      return readAccessUsers_.size();
    }
    /**
     * <code>repeated string read_access_users = 2;</code>
     */
    public java.lang.String getReadAccessUsers(int index) {
      return readAccessUsers_.get(index);
    }
    /**
     * <code>repeated string read_access_users = 2;</code>
     */
    public com.google.protobuf.ByteString
        getReadAccessUsersBytes(int index) {
      return readAccessUsers_.getByteString(index);
    }

    public static final int WRITE_ACCESS_USERS_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList writeAccessUsers_;
    /**
     * <code>repeated string write_access_users = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getWriteAccessUsersList() {
      return writeAccessUsers_;
    }
    /**
     * <code>repeated string write_access_users = 3;</code>
     */
    public int getWriteAccessUsersCount() {
      return writeAccessUsers_.size();
    }
    /**
     * <code>repeated string write_access_users = 3;</code>
     */
    public java.lang.String getWriteAccessUsers(int index) {
      return writeAccessUsers_.get(index);
    }
    /**
     * <code>repeated string write_access_users = 3;</code>
     */
    public com.google.protobuf.ByteString
        getWriteAccessUsersBytes(int index) {
      return writeAccessUsers_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      for (int i = 0; i < readAccessUsers_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, readAccessUsers_.getRaw(i));
      }
      for (int i = 0; i < writeAccessUsers_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, writeAccessUsers_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < readAccessUsers_.size(); i++) {
          dataSize += computeStringSizeNoTag(readAccessUsers_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getReadAccessUsersList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < writeAccessUsers_.size(); i++) {
          dataSize += computeStringSizeNoTag(writeAccessUsers_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getWriteAccessUsersList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof types.Configuration.DatabaseConfig)) {
        return super.equals(obj);
      }
      types.Configuration.DatabaseConfig other = (types.Configuration.DatabaseConfig) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && getReadAccessUsersList()
          .equals(other.getReadAccessUsersList());
      result = result && getWriteAccessUsersList()
          .equals(other.getWriteAccessUsersList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (getReadAccessUsersCount() > 0) {
        hash = (37 * hash) + READ_ACCESS_USERS_FIELD_NUMBER;
        hash = (53 * hash) + getReadAccessUsersList().hashCode();
      }
      if (getWriteAccessUsersCount() > 0) {
        hash = (37 * hash) + WRITE_ACCESS_USERS_FIELD_NUMBER;
        hash = (53 * hash) + getWriteAccessUsersList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static types.Configuration.DatabaseConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.DatabaseConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.DatabaseConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.DatabaseConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.DatabaseConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.DatabaseConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.DatabaseConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Configuration.DatabaseConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Configuration.DatabaseConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static types.Configuration.DatabaseConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Configuration.DatabaseConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Configuration.DatabaseConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(types.Configuration.DatabaseConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Database configuration. Stores default read/write ACLs
     * Stored as value in _dbs system database under key 'name'
     * </pre>
     *
     * Protobuf type {@code types.DatabaseConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:types.DatabaseConfig)
        types.Configuration.DatabaseConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return types.Configuration.internal_static_types_DatabaseConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return types.Configuration.internal_static_types_DatabaseConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                types.Configuration.DatabaseConfig.class, types.Configuration.DatabaseConfig.Builder.class);
      }

      // Construct using types.Configuration.DatabaseConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        readAccessUsers_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        writeAccessUsers_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return types.Configuration.internal_static_types_DatabaseConfig_descriptor;
      }

      @java.lang.Override
      public types.Configuration.DatabaseConfig getDefaultInstanceForType() {
        return types.Configuration.DatabaseConfig.getDefaultInstance();
      }

      @java.lang.Override
      public types.Configuration.DatabaseConfig build() {
        types.Configuration.DatabaseConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public types.Configuration.DatabaseConfig buildPartial() {
        types.Configuration.DatabaseConfig result = new types.Configuration.DatabaseConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.name_ = name_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          readAccessUsers_ = readAccessUsers_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.readAccessUsers_ = readAccessUsers_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          writeAccessUsers_ = writeAccessUsers_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.writeAccessUsers_ = writeAccessUsers_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof types.Configuration.DatabaseConfig) {
          return mergeFrom((types.Configuration.DatabaseConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(types.Configuration.DatabaseConfig other) {
        if (other == types.Configuration.DatabaseConfig.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.readAccessUsers_.isEmpty()) {
          if (readAccessUsers_.isEmpty()) {
            readAccessUsers_ = other.readAccessUsers_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureReadAccessUsersIsMutable();
            readAccessUsers_.addAll(other.readAccessUsers_);
          }
          onChanged();
        }
        if (!other.writeAccessUsers_.isEmpty()) {
          if (writeAccessUsers_.isEmpty()) {
            writeAccessUsers_ = other.writeAccessUsers_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureWriteAccessUsersIsMutable();
            writeAccessUsers_.addAll(other.writeAccessUsers_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        types.Configuration.DatabaseConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (types.Configuration.DatabaseConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList readAccessUsers_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureReadAccessUsersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          readAccessUsers_ = new com.google.protobuf.LazyStringArrayList(readAccessUsers_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string read_access_users = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getReadAccessUsersList() {
        return readAccessUsers_.getUnmodifiableView();
      }
      /**
       * <code>repeated string read_access_users = 2;</code>
       */
      public int getReadAccessUsersCount() {
        return readAccessUsers_.size();
      }
      /**
       * <code>repeated string read_access_users = 2;</code>
       */
      public java.lang.String getReadAccessUsers(int index) {
        return readAccessUsers_.get(index);
      }
      /**
       * <code>repeated string read_access_users = 2;</code>
       */
      public com.google.protobuf.ByteString
          getReadAccessUsersBytes(int index) {
        return readAccessUsers_.getByteString(index);
      }
      /**
       * <code>repeated string read_access_users = 2;</code>
       */
      public Builder setReadAccessUsers(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureReadAccessUsersIsMutable();
        readAccessUsers_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string read_access_users = 2;</code>
       */
      public Builder addReadAccessUsers(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureReadAccessUsersIsMutable();
        readAccessUsers_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string read_access_users = 2;</code>
       */
      public Builder addAllReadAccessUsers(
          java.lang.Iterable<java.lang.String> values) {
        ensureReadAccessUsersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, readAccessUsers_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string read_access_users = 2;</code>
       */
      public Builder clearReadAccessUsers() {
        readAccessUsers_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string read_access_users = 2;</code>
       */
      public Builder addReadAccessUsersBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureReadAccessUsersIsMutable();
        readAccessUsers_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList writeAccessUsers_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureWriteAccessUsersIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          writeAccessUsers_ = new com.google.protobuf.LazyStringArrayList(writeAccessUsers_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string write_access_users = 3;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getWriteAccessUsersList() {
        return writeAccessUsers_.getUnmodifiableView();
      }
      /**
       * <code>repeated string write_access_users = 3;</code>
       */
      public int getWriteAccessUsersCount() {
        return writeAccessUsers_.size();
      }
      /**
       * <code>repeated string write_access_users = 3;</code>
       */
      public java.lang.String getWriteAccessUsers(int index) {
        return writeAccessUsers_.get(index);
      }
      /**
       * <code>repeated string write_access_users = 3;</code>
       */
      public com.google.protobuf.ByteString
          getWriteAccessUsersBytes(int index) {
        return writeAccessUsers_.getByteString(index);
      }
      /**
       * <code>repeated string write_access_users = 3;</code>
       */
      public Builder setWriteAccessUsers(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureWriteAccessUsersIsMutable();
        writeAccessUsers_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string write_access_users = 3;</code>
       */
      public Builder addWriteAccessUsers(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureWriteAccessUsersIsMutable();
        writeAccessUsers_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string write_access_users = 3;</code>
       */
      public Builder addAllWriteAccessUsers(
          java.lang.Iterable<java.lang.String> values) {
        ensureWriteAccessUsersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, writeAccessUsers_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string write_access_users = 3;</code>
       */
      public Builder clearWriteAccessUsers() {
        writeAccessUsers_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string write_access_users = 3;</code>
       */
      public Builder addWriteAccessUsersBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureWriteAccessUsersIsMutable();
        writeAccessUsers_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:types.DatabaseConfig)
    }

    // @@protoc_insertion_point(class_scope:types.DatabaseConfig)
    private static final types.Configuration.DatabaseConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new types.Configuration.DatabaseConfig();
    }

    public static types.Configuration.DatabaseConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DatabaseConfig>
        PARSER = new com.google.protobuf.AbstractParser<DatabaseConfig>() {
      @java.lang.Override
      public DatabaseConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DatabaseConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DatabaseConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DatabaseConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public types.Configuration.DatabaseConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UserOrBuilder extends
      // @@protoc_insertion_point(interface_extends:types.User)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>bytes certificate = 2;</code>
     */
    com.google.protobuf.ByteString getCertificate();

    /**
     * <code>.types.Privilege privilege = 3;</code>
     */
    boolean hasPrivilege();
    /**
     * <code>.types.Privilege privilege = 3;</code>
     */
    types.Configuration.Privilege getPrivilege();
    /**
     * <code>.types.Privilege privilege = 3;</code>
     */
    types.Configuration.PrivilegeOrBuilder getPrivilegeOrBuilder();
  }
  /**
   * <pre>
   * User holds userID, certificate, privilege the user has,
   * and groups the user belong to.
   * </pre>
   *
   * Protobuf type {@code types.User}
   */
  public  static final class User extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:types.User)
      UserOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use User.newBuilder() to construct.
    private User(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private User() {
      id_ = "";
      certificate_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private User(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {

              certificate_ = input.readBytes();
              break;
            }
            case 26: {
              types.Configuration.Privilege.Builder subBuilder = null;
              if (privilege_ != null) {
                subBuilder = privilege_.toBuilder();
              }
              privilege_ = input.readMessage(types.Configuration.Privilege.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(privilege_);
                privilege_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return types.Configuration.internal_static_types_User_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return types.Configuration.internal_static_types_User_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              types.Configuration.User.class, types.Configuration.User.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CERTIFICATE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString certificate_;
    /**
     * <code>bytes certificate = 2;</code>
     */
    public com.google.protobuf.ByteString getCertificate() {
      return certificate_;
    }

    public static final int PRIVILEGE_FIELD_NUMBER = 3;
    private types.Configuration.Privilege privilege_;
    /**
     * <code>.types.Privilege privilege = 3;</code>
     */
    public boolean hasPrivilege() {
      return privilege_ != null;
    }
    /**
     * <code>.types.Privilege privilege = 3;</code>
     */
    public types.Configuration.Privilege getPrivilege() {
      return privilege_ == null ? types.Configuration.Privilege.getDefaultInstance() : privilege_;
    }
    /**
     * <code>.types.Privilege privilege = 3;</code>
     */
    public types.Configuration.PrivilegeOrBuilder getPrivilegeOrBuilder() {
      return getPrivilege();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!certificate_.isEmpty()) {
        output.writeBytes(2, certificate_);
      }
      if (privilege_ != null) {
        output.writeMessage(3, getPrivilege());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!certificate_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, certificate_);
      }
      if (privilege_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getPrivilege());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof types.Configuration.User)) {
        return super.equals(obj);
      }
      types.Configuration.User other = (types.Configuration.User) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && getCertificate()
          .equals(other.getCertificate());
      result = result && (hasPrivilege() == other.hasPrivilege());
      if (hasPrivilege()) {
        result = result && getPrivilege()
            .equals(other.getPrivilege());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + CERTIFICATE_FIELD_NUMBER;
      hash = (53 * hash) + getCertificate().hashCode();
      if (hasPrivilege()) {
        hash = (37 * hash) + PRIVILEGE_FIELD_NUMBER;
        hash = (53 * hash) + getPrivilege().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static types.Configuration.User parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.User parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.User parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.User parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.User parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.User parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.User parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Configuration.User parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Configuration.User parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static types.Configuration.User parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Configuration.User parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Configuration.User parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(types.Configuration.User prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * User holds userID, certificate, privilege the user has,
     * and groups the user belong to.
     * </pre>
     *
     * Protobuf type {@code types.User}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:types.User)
        types.Configuration.UserOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return types.Configuration.internal_static_types_User_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return types.Configuration.internal_static_types_User_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                types.Configuration.User.class, types.Configuration.User.Builder.class);
      }

      // Construct using types.Configuration.User.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        certificate_ = com.google.protobuf.ByteString.EMPTY;

        if (privilegeBuilder_ == null) {
          privilege_ = null;
        } else {
          privilege_ = null;
          privilegeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return types.Configuration.internal_static_types_User_descriptor;
      }

      @java.lang.Override
      public types.Configuration.User getDefaultInstanceForType() {
        return types.Configuration.User.getDefaultInstance();
      }

      @java.lang.Override
      public types.Configuration.User build() {
        types.Configuration.User result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public types.Configuration.User buildPartial() {
        types.Configuration.User result = new types.Configuration.User(this);
        result.id_ = id_;
        result.certificate_ = certificate_;
        if (privilegeBuilder_ == null) {
          result.privilege_ = privilege_;
        } else {
          result.privilege_ = privilegeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof types.Configuration.User) {
          return mergeFrom((types.Configuration.User)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(types.Configuration.User other) {
        if (other == types.Configuration.User.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.getCertificate() != com.google.protobuf.ByteString.EMPTY) {
          setCertificate(other.getCertificate());
        }
        if (other.hasPrivilege()) {
          mergePrivilege(other.getPrivilege());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        types.Configuration.User parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (types.Configuration.User) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString certificate_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes certificate = 2;</code>
       */
      public com.google.protobuf.ByteString getCertificate() {
        return certificate_;
      }
      /**
       * <code>bytes certificate = 2;</code>
       */
      public Builder setCertificate(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        certificate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes certificate = 2;</code>
       */
      public Builder clearCertificate() {
        
        certificate_ = getDefaultInstance().getCertificate();
        onChanged();
        return this;
      }

      private types.Configuration.Privilege privilege_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          types.Configuration.Privilege, types.Configuration.Privilege.Builder, types.Configuration.PrivilegeOrBuilder> privilegeBuilder_;
      /**
       * <code>.types.Privilege privilege = 3;</code>
       */
      public boolean hasPrivilege() {
        return privilegeBuilder_ != null || privilege_ != null;
      }
      /**
       * <code>.types.Privilege privilege = 3;</code>
       */
      public types.Configuration.Privilege getPrivilege() {
        if (privilegeBuilder_ == null) {
          return privilege_ == null ? types.Configuration.Privilege.getDefaultInstance() : privilege_;
        } else {
          return privilegeBuilder_.getMessage();
        }
      }
      /**
       * <code>.types.Privilege privilege = 3;</code>
       */
      public Builder setPrivilege(types.Configuration.Privilege value) {
        if (privilegeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          privilege_ = value;
          onChanged();
        } else {
          privilegeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.types.Privilege privilege = 3;</code>
       */
      public Builder setPrivilege(
          types.Configuration.Privilege.Builder builderForValue) {
        if (privilegeBuilder_ == null) {
          privilege_ = builderForValue.build();
          onChanged();
        } else {
          privilegeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.types.Privilege privilege = 3;</code>
       */
      public Builder mergePrivilege(types.Configuration.Privilege value) {
        if (privilegeBuilder_ == null) {
          if (privilege_ != null) {
            privilege_ =
              types.Configuration.Privilege.newBuilder(privilege_).mergeFrom(value).buildPartial();
          } else {
            privilege_ = value;
          }
          onChanged();
        } else {
          privilegeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.types.Privilege privilege = 3;</code>
       */
      public Builder clearPrivilege() {
        if (privilegeBuilder_ == null) {
          privilege_ = null;
          onChanged();
        } else {
          privilege_ = null;
          privilegeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.types.Privilege privilege = 3;</code>
       */
      public types.Configuration.Privilege.Builder getPrivilegeBuilder() {
        
        onChanged();
        return getPrivilegeFieldBuilder().getBuilder();
      }
      /**
       * <code>.types.Privilege privilege = 3;</code>
       */
      public types.Configuration.PrivilegeOrBuilder getPrivilegeOrBuilder() {
        if (privilegeBuilder_ != null) {
          return privilegeBuilder_.getMessageOrBuilder();
        } else {
          return privilege_ == null ?
              types.Configuration.Privilege.getDefaultInstance() : privilege_;
        }
      }
      /**
       * <code>.types.Privilege privilege = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          types.Configuration.Privilege, types.Configuration.Privilege.Builder, types.Configuration.PrivilegeOrBuilder> 
          getPrivilegeFieldBuilder() {
        if (privilegeBuilder_ == null) {
          privilegeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              types.Configuration.Privilege, types.Configuration.Privilege.Builder, types.Configuration.PrivilegeOrBuilder>(
                  getPrivilege(),
                  getParentForChildren(),
                  isClean());
          privilege_ = null;
        }
        return privilegeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:types.User)
    }

    // @@protoc_insertion_point(class_scope:types.User)
    private static final types.Configuration.User DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new types.Configuration.User();
    }

    public static types.Configuration.User getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<User>
        PARSER = new com.google.protobuf.AbstractParser<User>() {
      @java.lang.Override
      public User parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new User(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<User> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<User> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public types.Configuration.User getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PrivilegeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:types.Privilege)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
     */
    int getDbPermissionCount();
    /**
     * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
     */
    boolean containsDbPermission(
        java.lang.String key);
    /**
     * Use {@link #getDbPermissionMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, types.Configuration.Privilege.Access>
    getDbPermission();
    /**
     * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
     */
    java.util.Map<java.lang.String, types.Configuration.Privilege.Access>
    getDbPermissionMap();
    /**
     * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
     */
    types.Configuration.Privilege.Access getDbPermissionOrDefault(
        java.lang.String key,
        types.Configuration.Privilege.Access defaultValue);
    /**
     * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
     */
    types.Configuration.Privilege.Access getDbPermissionOrThrow(
        java.lang.String key);
    /**
     * Use {@link #getDbPermissionValueMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getDbPermissionValue();
    /**
     * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getDbPermissionValueMap();
    /**
     * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
     */

    int getDbPermissionValueOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
     */

    int getDbPermissionValueOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * admin has privileges to submit a user administration transaction,
     * cluster configuration transaction, and database administration
     * transaction. Further, admin has permission to read-write states
     * from any database provided that the state has no ACL defined. If
     * a state has a read and write ACL, the admin can read or write to
     * the state only if the admin is listed in the read or write ACL list.
     * </pre>
     *
     * <code>bool admin = 2;</code>
     */
    boolean getAdmin();
  }
  /**
   * <pre>
   * Privilege holds user/group privilege information such as
   * a list of databases to which the read is allowed, a list of
   * databases to which the write is allowed, bools to indicate
   * where the db manipulation such as DB creation/deletion and
   * user manipulation such as add/update/delete are allowed.
   * </pre>
   *
   * Protobuf type {@code types.Privilege}
   */
  public  static final class Privilege extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:types.Privilege)
      PrivilegeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Privilege.newBuilder() to construct.
    private Privilege(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Privilege() {
      admin_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Privilege(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                dbPermission_ = com.google.protobuf.MapField.newMapField(
                    DbPermissionDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              dbPermission__ = input.readMessage(
                  DbPermissionDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              dbPermission_.getMutableMap().put(
                  dbPermission__.getKey(), dbPermission__.getValue());
              break;
            }
            case 16: {

              admin_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return types.Configuration.internal_static_types_Privilege_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetDbPermission();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return types.Configuration.internal_static_types_Privilege_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              types.Configuration.Privilege.class, types.Configuration.Privilege.Builder.class);
    }

    /**
     * Protobuf enum {@code types.Privilege.Access}
     */
    public enum Access
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>Read = 0;</code>
       */
      Read(0),
      /**
       * <code>ReadWrite = 1;</code>
       */
      ReadWrite(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>Read = 0;</code>
       */
      public static final int Read_VALUE = 0;
      /**
       * <code>ReadWrite = 1;</code>
       */
      public static final int ReadWrite_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Access valueOf(int value) {
        return forNumber(value);
      }

      public static Access forNumber(int value) {
        switch (value) {
          case 0: return Read;
          case 1: return ReadWrite;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Access>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Access> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Access>() {
              public Access findValueByNumber(int number) {
                return Access.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return types.Configuration.Privilege.getDescriptor().getEnumTypes().get(0);
      }

      private static final Access[] VALUES = values();

      public static Access valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Access(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:types.Privilege.Access)
    }

    private int bitField0_;
    public static final int DB_PERMISSION_FIELD_NUMBER = 1;
    private static final class DbPermissionDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  types.Configuration.internal_static_types_Privilege_DbPermissionEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  types.Configuration.Privilege.Access.Read.getNumber());
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> dbPermission_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetDbPermission() {
      if (dbPermission_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            DbPermissionDefaultEntryHolder.defaultEntry);
      }
      return dbPermission_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, types.Configuration.Privilege.Access> dbPermissionValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                types.Configuration.Privilege.Access.internalGetValueMap(),
                types.Configuration.Privilege.Access.UNRECOGNIZED);
    private static final java.util.Map<java.lang.String, types.Configuration.Privilege.Access>
    internalGetAdaptedDbPermissionMap(
        java.util.Map<java.lang.String, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.String, types.Configuration.Privilege.Access, java.lang.Integer>(
              map, dbPermissionValueConverter);
    }

    public int getDbPermissionCount() {
      return internalGetDbPermission().getMap().size();
    }
    /**
     * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
     */

    public boolean containsDbPermission(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetDbPermission().getMap().containsKey(key);
    }
    /**
     * Use {@link #getDbPermissionMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, types.Configuration.Privilege.Access>
    getDbPermission() {
      return getDbPermissionMap();
    }
    /**
     * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
     */

    public java.util.Map<java.lang.String, types.Configuration.Privilege.Access>
    getDbPermissionMap() {
      return internalGetAdaptedDbPermissionMap(
          internalGetDbPermission().getMap());}
    /**
     * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
     */

    public types.Configuration.Privilege.Access getDbPermissionOrDefault(
        java.lang.String key,
        types.Configuration.Privilege.Access defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetDbPermission().getMap();
      return map.containsKey(key)
             ? dbPermissionValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
     */

    public types.Configuration.Privilege.Access getDbPermissionOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetDbPermission().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return dbPermissionValueConverter.doForward(map.get(key));
    }
    /**
     * Use {@link #getDbPermissionValueMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getDbPermissionValue() {
      return getDbPermissionValueMap();
    }
    /**
     * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer>
    getDbPermissionValueMap() {
      return internalGetDbPermission().getMap();
    }
    /**
     * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
     */

    public int getDbPermissionValueOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetDbPermission().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
     */

    public int getDbPermissionValueOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetDbPermission().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int ADMIN_FIELD_NUMBER = 2;
    private boolean admin_;
    /**
     * <pre>
     * admin has privileges to submit a user administration transaction,
     * cluster configuration transaction, and database administration
     * transaction. Further, admin has permission to read-write states
     * from any database provided that the state has no ACL defined. If
     * a state has a read and write ACL, the admin can read or write to
     * the state only if the admin is listed in the read or write ACL list.
     * </pre>
     *
     * <code>bool admin = 2;</code>
     */
    public boolean getAdmin() {
      return admin_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetDbPermission(),
          DbPermissionDefaultEntryHolder.defaultEntry,
          1);
      if (admin_ != false) {
        output.writeBool(2, admin_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetDbPermission().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        dbPermission__ = DbPermissionDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, dbPermission__);
      }
      if (admin_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, admin_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof types.Configuration.Privilege)) {
        return super.equals(obj);
      }
      types.Configuration.Privilege other = (types.Configuration.Privilege) obj;

      boolean result = true;
      result = result && internalGetDbPermission().equals(
          other.internalGetDbPermission());
      result = result && (getAdmin()
          == other.getAdmin());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetDbPermission().getMap().isEmpty()) {
        hash = (37 * hash) + DB_PERMISSION_FIELD_NUMBER;
        hash = (53 * hash) + internalGetDbPermission().hashCode();
      }
      hash = (37 * hash) + ADMIN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getAdmin());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static types.Configuration.Privilege parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.Privilege parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.Privilege parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.Privilege parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.Privilege parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static types.Configuration.Privilege parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static types.Configuration.Privilege parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Configuration.Privilege parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Configuration.Privilege parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static types.Configuration.Privilege parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static types.Configuration.Privilege parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static types.Configuration.Privilege parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(types.Configuration.Privilege prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Privilege holds user/group privilege information such as
     * a list of databases to which the read is allowed, a list of
     * databases to which the write is allowed, bools to indicate
     * where the db manipulation such as DB creation/deletion and
     * user manipulation such as add/update/delete are allowed.
     * </pre>
     *
     * Protobuf type {@code types.Privilege}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:types.Privilege)
        types.Configuration.PrivilegeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return types.Configuration.internal_static_types_Privilege_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetDbPermission();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableDbPermission();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return types.Configuration.internal_static_types_Privilege_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                types.Configuration.Privilege.class, types.Configuration.Privilege.Builder.class);
      }

      // Construct using types.Configuration.Privilege.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableDbPermission().clear();
        admin_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return types.Configuration.internal_static_types_Privilege_descriptor;
      }

      @java.lang.Override
      public types.Configuration.Privilege getDefaultInstanceForType() {
        return types.Configuration.Privilege.getDefaultInstance();
      }

      @java.lang.Override
      public types.Configuration.Privilege build() {
        types.Configuration.Privilege result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public types.Configuration.Privilege buildPartial() {
        types.Configuration.Privilege result = new types.Configuration.Privilege(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.dbPermission_ = internalGetDbPermission();
        result.dbPermission_.makeImmutable();
        result.admin_ = admin_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof types.Configuration.Privilege) {
          return mergeFrom((types.Configuration.Privilege)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(types.Configuration.Privilege other) {
        if (other == types.Configuration.Privilege.getDefaultInstance()) return this;
        internalGetMutableDbPermission().mergeFrom(
            other.internalGetDbPermission());
        if (other.getAdmin() != false) {
          setAdmin(other.getAdmin());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        types.Configuration.Privilege parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (types.Configuration.Privilege) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> dbPermission_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetDbPermission() {
        if (dbPermission_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              DbPermissionDefaultEntryHolder.defaultEntry);
        }
        return dbPermission_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableDbPermission() {
        onChanged();;
        if (dbPermission_ == null) {
          dbPermission_ = com.google.protobuf.MapField.newMapField(
              DbPermissionDefaultEntryHolder.defaultEntry);
        }
        if (!dbPermission_.isMutable()) {
          dbPermission_ = dbPermission_.copy();
        }
        return dbPermission_;
      }

      public int getDbPermissionCount() {
        return internalGetDbPermission().getMap().size();
      }
      /**
       * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
       */

      public boolean containsDbPermission(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetDbPermission().getMap().containsKey(key);
      }
      /**
       * Use {@link #getDbPermissionMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, types.Configuration.Privilege.Access>
      getDbPermission() {
        return getDbPermissionMap();
      }
      /**
       * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
       */

      public java.util.Map<java.lang.String, types.Configuration.Privilege.Access>
      getDbPermissionMap() {
        return internalGetAdaptedDbPermissionMap(
            internalGetDbPermission().getMap());}
      /**
       * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
       */

      public types.Configuration.Privilege.Access getDbPermissionOrDefault(
          java.lang.String key,
          types.Configuration.Privilege.Access defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetDbPermission().getMap();
        return map.containsKey(key)
               ? dbPermissionValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
       */

      public types.Configuration.Privilege.Access getDbPermissionOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetDbPermission().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return dbPermissionValueConverter.doForward(map.get(key));
      }
      /**
       * Use {@link #getDbPermissionValueMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getDbPermissionValue() {
        return getDbPermissionValueMap();
      }
      /**
       * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer>
      getDbPermissionValueMap() {
        return internalGetDbPermission().getMap();
      }
      /**
       * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
       */

      public int getDbPermissionValueOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetDbPermission().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
       */

      public int getDbPermissionValueOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetDbPermission().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearDbPermission() {
        internalGetMutableDbPermission().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
       */

      public Builder removeDbPermission(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableDbPermission().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, types.Configuration.Privilege.Access>
      getMutableDbPermission() {
        return internalGetAdaptedDbPermissionMap(
             internalGetMutableDbPermission().getMutableMap());
      }
      /**
       * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
       */
      public Builder putDbPermission(
          java.lang.String key,
          types.Configuration.Privilege.Access value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableDbPermission().getMutableMap()
            .put(key, dbPermissionValueConverter.doBackward(value));
        return this;
      }
      /**
       * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
       */
      public Builder putAllDbPermission(
          java.util.Map<java.lang.String, types.Configuration.Privilege.Access> values) {
        internalGetAdaptedDbPermissionMap(
            internalGetMutableDbPermission().getMutableMap())
                .putAll(values);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableDbPermissionValue() {
        return internalGetMutableDbPermission().getMutableMap();
      }
      /**
       * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
       */
      public Builder putDbPermissionValue(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableDbPermission().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .types.Privilege.Access&gt; db_permission = 1;</code>
       */
      public Builder putAllDbPermissionValue(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableDbPermission().getMutableMap()
            .putAll(values);
        return this;
      }

      private boolean admin_ ;
      /**
       * <pre>
       * admin has privileges to submit a user administration transaction,
       * cluster configuration transaction, and database administration
       * transaction. Further, admin has permission to read-write states
       * from any database provided that the state has no ACL defined. If
       * a state has a read and write ACL, the admin can read or write to
       * the state only if the admin is listed in the read or write ACL list.
       * </pre>
       *
       * <code>bool admin = 2;</code>
       */
      public boolean getAdmin() {
        return admin_;
      }
      /**
       * <pre>
       * admin has privileges to submit a user administration transaction,
       * cluster configuration transaction, and database administration
       * transaction. Further, admin has permission to read-write states
       * from any database provided that the state has no ACL defined. If
       * a state has a read and write ACL, the admin can read or write to
       * the state only if the admin is listed in the read or write ACL list.
       * </pre>
       *
       * <code>bool admin = 2;</code>
       */
      public Builder setAdmin(boolean value) {
        
        admin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * admin has privileges to submit a user administration transaction,
       * cluster configuration transaction, and database administration
       * transaction. Further, admin has permission to read-write states
       * from any database provided that the state has no ACL defined. If
       * a state has a read and write ACL, the admin can read or write to
       * the state only if the admin is listed in the read or write ACL list.
       * </pre>
       *
       * <code>bool admin = 2;</code>
       */
      public Builder clearAdmin() {
        
        admin_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:types.Privilege)
    }

    // @@protoc_insertion_point(class_scope:types.Privilege)
    private static final types.Configuration.Privilege DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new types.Configuration.Privilege();
    }

    public static types.Configuration.Privilege getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Privilege>
        PARSER = new com.google.protobuf.AbstractParser<Privilege>() {
      @java.lang.Override
      public Privilege parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Privilege(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Privilege> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Privilege> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public types.Configuration.Privilege getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_types_ClusterConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_types_ClusterConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_types_NodeConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_types_NodeConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_types_Admin_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_types_Admin_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_types_CAConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_types_CAConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_types_ConsensusConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_types_ConsensusConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_types_PeerConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_types_PeerConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_types_RaftConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_types_RaftConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_types_DatabaseConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_types_DatabaseConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_types_User_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_types_User_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_types_Privilege_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_types_Privilege_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_types_Privilege_DbPermissionEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_types_Privilege_DbPermissionEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023configuration.proto\022\005types\"\254\001\n\rCluster" +
      "Config\022 \n\005nodes\030\001 \003(\0132\021.types.NodeConfig" +
      "\022\034\n\006admins\030\002 \003(\0132\014.types.Admin\022)\n\020cert_a" +
      "uth_config\030\003 \001(\0132\017.types.CAConfig\0220\n\020con" +
      "sensus_config\030\004 \001(\0132\026.types.ConsensusCon" +
      "fig\"L\n\nNodeConfig\022\n\n\002id\030\001 \001(\t\022\017\n\007address" +
      "\030\002 \001(\t\022\014\n\004port\030\003 \001(\r\022\023\n\013certificate\030\004 \001(" +
      "\014\"(\n\005Admin\022\n\n\002id\030\001 \001(\t\022\023\n\013certificate\030\002 " +
      "\001(\014\"0\n\010CAConfig\022\r\n\005roots\030\001 \003(\014\022\025\n\rinterm" +
      "ediates\030\002 \003(\014\"\226\001\n\017ConsensusConfig\022\021\n\talg" +
      "orithm\030\001 \001(\t\022\"\n\007members\030\002 \003(\0132\021.types.Pe" +
      "erConfig\022$\n\tobservers\030\003 \003(\0132\021.types.Peer" +
      "Config\022&\n\013raft_config\030\004 \001(\0132\021.types.Raft" +
      "Config\"T\n\nPeerConfig\022\017\n\007node_id\030\001 \001(\t\022\017\n" +
      "\007raft_id\030\002 \001(\004\022\021\n\tpeer_host\030\003 \001(\t\022\021\n\tpee" +
      "r_port\030\004 \001(\r\"\246\001\n\nRaftConfig\022\025\n\rtick_inte" +
      "rval\030\001 \001(\t\022\026\n\016election_ticks\030\002 \001(\r\022\027\n\017he" +
      "artbeat_ticks\030\003 \001(\r\022\033\n\023max_inflight_bloc" +
      "ks\030\004 \001(\r\022\036\n\026snapshot_interval_size\030\005 \001(\004" +
      "\022\023\n\013max_raft_id\030\006 \001(\004\"U\n\016DatabaseConfig\022" +
      "\014\n\004name\030\001 \001(\t\022\031\n\021read_access_users\030\002 \003(\t" +
      "\022\032\n\022write_access_users\030\003 \003(\t\"L\n\004User\022\n\n\002" +
      "id\030\001 \001(\t\022\023\n\013certificate\030\002 \001(\014\022#\n\tprivile" +
      "ge\030\003 \001(\0132\020.types.Privilege\"\306\001\n\tPrivilege" +
      "\0229\n\rdb_permission\030\001 \003(\0132\".types.Privileg" +
      "e.DbPermissionEntry\022\r\n\005admin\030\002 \001(\010\032L\n\021Db" +
      "PermissionEntry\022\013\n\003key\030\001 \001(\t\022&\n\005value\030\002 " +
      "\001(\0162\027.types.Privilege.Access:\0028\001\"!\n\006Acce" +
      "ss\022\010\n\004Read\020\000\022\r\n\tReadWrite\020\001B4Z2github.co" +
      "m/hyperledger-labs/orion-server/pkg/type" +
      "sb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_types_ClusterConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_types_ClusterConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_types_ClusterConfig_descriptor,
        new java.lang.String[] { "Nodes", "Admins", "CertAuthConfig", "ConsensusConfig", });
    internal_static_types_NodeConfig_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_types_NodeConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_types_NodeConfig_descriptor,
        new java.lang.String[] { "Id", "Address", "Port", "Certificate", });
    internal_static_types_Admin_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_types_Admin_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_types_Admin_descriptor,
        new java.lang.String[] { "Id", "Certificate", });
    internal_static_types_CAConfig_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_types_CAConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_types_CAConfig_descriptor,
        new java.lang.String[] { "Roots", "Intermediates", });
    internal_static_types_ConsensusConfig_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_types_ConsensusConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_types_ConsensusConfig_descriptor,
        new java.lang.String[] { "Algorithm", "Members", "Observers", "RaftConfig", });
    internal_static_types_PeerConfig_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_types_PeerConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_types_PeerConfig_descriptor,
        new java.lang.String[] { "NodeId", "RaftId", "PeerHost", "PeerPort", });
    internal_static_types_RaftConfig_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_types_RaftConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_types_RaftConfig_descriptor,
        new java.lang.String[] { "TickInterval", "ElectionTicks", "HeartbeatTicks", "MaxInflightBlocks", "SnapshotIntervalSize", "MaxRaftId", });
    internal_static_types_DatabaseConfig_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_types_DatabaseConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_types_DatabaseConfig_descriptor,
        new java.lang.String[] { "Name", "ReadAccessUsers", "WriteAccessUsers", });
    internal_static_types_User_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_types_User_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_types_User_descriptor,
        new java.lang.String[] { "Id", "Certificate", "Privilege", });
    internal_static_types_Privilege_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_types_Privilege_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_types_Privilege_descriptor,
        new java.lang.String[] { "DbPermission", "Admin", });
    internal_static_types_Privilege_DbPermissionEntry_descriptor =
      internal_static_types_Privilege_descriptor.getNestedTypes().get(0);
    internal_static_types_Privilege_DbPermissionEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_types_Privilege_DbPermissionEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
